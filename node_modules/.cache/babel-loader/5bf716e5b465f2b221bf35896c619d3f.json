{"ast":null,"code":"var _jsxFileName = \"/Users/Aayush/Desktop/Web Design/WebDesignProject/src/components/GoogleBtn.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport axios from 'axios';\nimport { setUser } from '../actions/setUser';\nimport { connect } from 'react-redux';\nconst CLIENT_ID = '93246890964-a6n1q1r82a76fve86fhalu6pmat9tvtf.apps.googleusercontent.com';\n\nclass GoogleBtn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogined: false,\n      accessToken: ''\n    };\n    this.login = this.login.bind(this);\n    this.handleLoginFailure = this.handleLoginFailure.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\n  }\n\n  login(response) {\n    console.log(response);\n\n    if (response.tokenObj.access_token) {\n      axios.get('http://localhost:5000/users/findByEmail/' + response.profileObj.email).then(res => {\n        if (Object.keys(res.data).length === 0) {\n          axios.post('http://localhost:5000/users/add', {\n            name: response.profileObj.name,\n            username: response.profileObj.email,\n            password: response.profileObj.googleId\n          }, {\n            \"headers\": {\n              'Content-Type': 'application/json'\n            }\n          }).then(res => {\n            const tempUser = {\n              name: response.profileObj.name,\n              username: response.profileObj.email\n            };\n            sessionStorage.setItem('user', JSON.stringify(tempUser));\n            this.props.setUser(tempUser);\n          }).catch(err => console.log(err));\n        } else {\n          sessionStorage.setItem('user', JSON.stringify(res.data));\n          this.props.setUser(res.data);\n        }\n\n        this.setState(state => ({\n          isLogined: true,\n          accessToken: response.tokenObj.access_token\n        }));\n      }).catch(err => console.log(err));\n    }\n  }\n\n  logout(response) {\n    console.log(response);\n    this.setState(state => ({\n      isLogined: false,\n      accessToken: ''\n    }));\n  }\n\n  handleLoginFailure(response) {\n    alert('Failed to log in');\n  }\n\n  handleLogoutFailure(response) {\n    alert('Failed to log out');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.isLogined ? React.createElement(GoogleLogout, {\n      clientId: CLIENT_ID,\n      buttonText: \"GOOGLE\",\n      onLogoutSuccess: this.logout,\n      onFailure: this.handleLogoutFailure,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }) : React.createElement(GoogleLogin, {\n      clientId: CLIENT_ID,\n      buttonText: \"GOOGLE\",\n      onSuccess: this.login,\n      onFailure: this.handleLoginFailure,\n      cookiePolicy: 'single_host_origin',\n      responseType: \"code,token\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userState: state.userState\n});\n\nexport default connect(mapStateToProps, {\n  setUser\n})(GoogleBtn);","map":{"version":3,"sources":["/Users/Aayush/Desktop/Web Design/WebDesignProject/src/components/GoogleBtn.js"],"names":["React","Component","ReactDOM","GoogleLogin","GoogleLogout","axios","setUser","connect","CLIENT_ID","GoogleBtn","constructor","props","state","isLogined","accessToken","login","bind","handleLoginFailure","logout","handleLogoutFailure","response","console","log","tokenObj","access_token","get","profileObj","email","then","res","Object","keys","data","length","post","name","username","password","googleId","tempUser","sessionStorage","setItem","JSON","stringify","catch","err","setState","alert","render","mapStateToProps","userState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,oBAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,MAAMC,SAAS,GAAG,yEAAlB;;AAGA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAChCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,KADA;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAKA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKG,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBH,IAAzB,CAA8B,IAA9B,CAA3B;AACD;;AAEDD,EAAAA,KAAK,CAAEK,QAAF,EAAY;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,QAAGA,QAAQ,CAACG,QAAT,CAAkBC,YAArB,EAAkC;AAChCnB,MAAAA,KAAK,CAACoB,GAAN,CAAU,6CAA2CL,QAAQ,CAACM,UAAT,CAAoBC,KAAzE,EACGC,IADH,CACQC,GAAG,IAAE;AACT,YAAGC,MAAM,CAACC,IAAP,CAAYF,GAAG,CAACG,IAAhB,EAAsBC,MAAtB,KAAiC,CAApC,EAAsC;AACpC5B,UAAAA,KAAK,CAAC6B,IAAN,CAAW,iCAAX,EACA;AACEC,YAAAA,IAAI,EAAEf,QAAQ,CAACM,UAAT,CAAoBS,IAD5B;AAEEC,YAAAA,QAAQ,EAAEhB,QAAQ,CAACM,UAAT,CAAoBC,KAFhC;AAGEU,YAAAA,QAAQ,EAAEjB,QAAQ,CAACM,UAAT,CAAoBY;AAHhC,WADA,EAKE;AACA,uBAAW;AACT,8BAAgB;AADP;AADX,WALF,EAUGV,IAVH,CAUQC,GAAG,IAAE;AAET,kBAAMU,QAAQ,GAAG;AACfJ,cAAAA,IAAI,EAAEf,QAAQ,CAACM,UAAT,CAAoBS,IADX;AAEfC,cAAAA,QAAQ,EAAEhB,QAAQ,CAACM,UAAT,CAAoBC;AAFf,aAAjB;AAIAa,YAAAA,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA8BC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAA9B;AACA,iBAAK5B,KAAL,CAAWL,OAAX,CAAmBiC,QAAnB;AACD,WAlBH,EAmBGK,KAnBH,CAmBSC,GAAG,IAAExB,OAAO,CAACC,GAAR,CAAYuB,GAAZ,CAnBd;AAqBD,SAtBD,MAuBI;AACFL,UAAAA,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA8BC,IAAI,CAACC,SAAL,CAAed,GAAG,CAACG,IAAnB,CAA9B;AACA,eAAKrB,KAAL,CAAWL,OAAX,CAAmBuB,GAAG,CAACG,IAAvB;AACD;;AACD,aAAKc,QAAL,CAAclC,KAAK,KAAK;AACtBC,UAAAA,SAAS,EAAE,IADW;AAEtBC,UAAAA,WAAW,EAAEM,QAAQ,CAACG,QAAT,CAAkBC;AAFT,SAAL,CAAnB;AAID,OAjCH,EAkCGoB,KAlCH,CAkCSC,GAAG,IAAExB,OAAO,CAACC,GAAR,CAAYuB,GAAZ,CAlCd;AAqCC;AACJ;;AAED3B,EAAAA,MAAM,CAAEE,QAAF,EAAY;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SAAK0B,QAAL,CAAclC,KAAK,KAAK;AACtBC,MAAAA,SAAS,EAAE,KADW;AAEtBC,MAAAA,WAAW,EAAE;AAFS,KAAL,CAAnB;AAID;;AAEDG,EAAAA,kBAAkB,CAAEG,QAAF,EAAY;AAC5B2B,IAAAA,KAAK,CAAC,kBAAD,CAAL;AACD;;AAED5B,EAAAA,mBAAmB,CAAEC,QAAF,EAAY;AAC7B2B,IAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;;AAKDC,EAAAA,MAAM,GAAG;AACP,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKpC,KAAL,CAAWC,SAAX,GAEA,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAGL,SADb;AAEE,MAAA,UAAU,EAAC,QAFb;AAGE,MAAA,eAAe,EAAG,KAAKU,MAHzB;AAIE,MAAA,SAAS,EAAG,KAAKC,mBAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,GAQiB,oBAAC,WAAD;AACf,MAAA,QAAQ,EAAEX,SADK;AAEf,MAAA,UAAU,EAAC,QAFI;AAGf,MAAA,SAAS,EAAG,KAAKO,KAHF;AAIf,MAAA,SAAS,EAAG,KAAKE,kBAJF;AAKf,MAAA,YAAY,EAAG,oBALA;AAMf,MAAA,YAAY,EAAC,YANE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATrB,CADA;AAqBD;;AAnG+B;;AAsGlC,MAAMgC,eAAe,GAAIrC,KAAD,KAAY;AAClCsC,EAAAA,SAAS,EAAEtC,KAAK,CAACsC;AADiB,CAAZ,CAAxB;;AAKA,eAAe3C,OAAO,CAAC0C,eAAD,EAAiB;AAAE3C,EAAAA;AAAF,CAAjB,CAAP,CAAqCG,SAArC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport axios from 'axios';\nimport { setUser } from '../actions/setUser';\nimport { connect } from 'react-redux';\n\nconst CLIENT_ID = '93246890964-a6n1q1r82a76fve86fhalu6pmat9tvtf.apps.googleusercontent.com';\n\n\nclass GoogleBtn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLogined: false,\n      accessToken: ''\n    };\n\n    this.login = this.login.bind(this);\n    this.handleLoginFailure = this.handleLoginFailure.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\n  }\n\n  login (response) {\n    console.log(response)\n    if(response.tokenObj.access_token){\n      axios.get('http://localhost:5000/users/findByEmail/'+response.profileObj.email)\n        .then(res=>{\n          if(Object.keys(res.data).length === 0){\n            axios.post('http://localhost:5000/users/add',\n            {\n              name: response.profileObj.name,\n              username: response.profileObj.email,\n              password: response.profileObj.googleId\n            },{\n              \"headers\": {\n                'Content-Type': 'application/json',\n              }\n            })\n              .then(res=>{\n               \n                const tempUser = {\n                  name: response.profileObj.name,\n                  username: response.profileObj.email\n                }\n                sessionStorage.setItem('user',JSON.stringify(tempUser));\n                this.props.setUser(tempUser);           \n              })\n              .catch(err=>console.log(err));\n            \n          }\n          else{\n            sessionStorage.setItem('user',JSON.stringify(res.data));\n            this.props.setUser(res.data); \n          }\n          this.setState(state => ({\n            isLogined: true,\n            accessToken: response.tokenObj.access_token\n          }));\n        })\n        .catch(err=>console.log(err));\n      \n      \n      }\n  }\n\n  logout (response) {\n    console.log(response)\n    this.setState(state => ({\n      isLogined: false,\n      accessToken: ''\n    }));\n  }\n\n  handleLoginFailure (response) {\n    alert('Failed to log in')\n  }\n\n  handleLogoutFailure (response) {\n    alert('Failed to log out')\n  }\n\n\n\n\n  render() {\n    return (\n    <div>\n      { this.state.isLogined ?\n  \n        <GoogleLogout\n          clientId={ CLIENT_ID }\n          buttonText='GOOGLE'\n          onLogoutSuccess={ this.logout }\n          onFailure={ this.handleLogoutFailure }\n        > \n        </GoogleLogout>: <GoogleLogin\n          clientId={CLIENT_ID}\n          buttonText='GOOGLE'\n          onSuccess={ this.login }\n          onFailure={ this.handleLoginFailure }\n          cookiePolicy={ 'single_host_origin' }\n          responseType='code,token'\n        />\n      }\n    </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  userState: state.userState\n});\n\n\nexport default connect(mapStateToProps,{ setUser })(GoogleBtn);"]},"metadata":{},"sourceType":"module"}