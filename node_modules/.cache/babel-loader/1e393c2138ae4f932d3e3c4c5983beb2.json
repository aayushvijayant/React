{"ast":null,"code":"var _jsxFileName = \"/Users/Aayush/Desktop/Web Design/WebDesignProject/src/components/Services/ApplianceRepair/fridgeRepair/FridgeRepairCart.js\";\nimport React, { Component } from 'react';\nimport Scrollspy from 'react-scrollspy';\nimport { Button } from \"reactstrap\";\nimport { Row, Col, Badge } from \"reactstrap\";\nimport \"../../../../assets/vendor/font-awesome/css/font-awesome.min.css\";\nimport { connect } from 'react-redux';\nimport { toggleCartModal } from '../../../../actions/toggleCartModal';\nimport CartModal from './CartModal';\nimport { addProductFromDB } from '../../../../actions/addInputs/addProductFromDB';\nimport Axios from 'axios';\nimport ProductCard from './ProductCard';\nimport LoadingCard from './LoadingCard';\nimport { Link } from \"react-router-dom\";\n\nclass FridgeRepairCart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getList = name => {\n      switch (name) {\n        case 'Service/Repair':\n          return global.rRepairList;\n\n        case 'Compressor/Cooling':\n          return global.rCoolingList;\n\n        case 'Gas Filling':\n          return global.rGasList;\n\n        case 'Other Issues':\n          return global.rOtherList;\n\n        default:\n          break;\n      }\n    };\n\n    this.state = {\n      services: ['Service/Repair', 'Compressor/Cooling', 'Gas Filling', 'Other Issues'],\n      products: []\n    };\n  }\n\n  componentDidMount() {\n    Axios.get('http://localhost:5000/ApplianceRepair/fridge').then(res => {\n      console.log(res.data);\n      let tempList = []; // res.data.map(product=> this.props.addProductFromDB(product));\n\n      res.data.map(product => tempList.push(product));\n      console.log(this.props.cartState);\n      this.setState({\n        products: tempList\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    const {\n      services\n    } = this.state;\n    const trimmedServices = services.map(category => category.replace(/\\s/g, ''));\n    const servicesList = services.length ? services.map(category => {\n      return React.createElement(\"li\", {\n        key: category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\" + category.replace(/\\s/g, ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"default\",\n        outline: true,\n        type: \"button\",\n        style: {\n          marginBottom: \"6px\",\n          marginLeft: \"5%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, category)));\n    }) : React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#fetching\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"default\",\n      outline: true,\n      type: \"button\",\n      style: {\n        marginBottom: \"6px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Fetching...\")));\n    const repairCategory = [];\n\n    for (var product in this.state.products) {\n      if (this.state.products[product].category === 'Service/Repair') repairCategory.push(this.state.products[product]);\n    }\n\n    const coolingCategory = [];\n\n    for (var product in this.state.products) {\n      if (this.state.products[product].category === 'Compressor/Cooling') coolingCategory.push(this.state.products[product]);\n    }\n\n    const gasCategory = [];\n\n    for (var product in this.state.products) {\n      if (this.state.products[product].category === 'Gas Filling') gasCategory.push(this.state.products[product]);\n    }\n\n    const otherCategory = [];\n\n    for (var product in this.state.products) {\n      if (this.state.products[product].category === 'Other Issues') otherCategory.push(this.state.products[product]);\n    }\n\n    global.rRepairList = repairCategory.length ? repairCategory.map(product => {\n      return React.createElement(ProductCard, {\n        product: product,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      });\n    }) : React.createElement(LoadingCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    });\n    global.rCoolingList = coolingCategory.length ? coolingCategory.map(product => {\n      return React.createElement(ProductCard, {\n        product: product,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      });\n    }) : React.createElement(LoadingCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    });\n    global.rGasList = gasCategory.length ? gasCategory.map(product => {\n      return React.createElement(ProductCard, {\n        product: product,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      });\n    }) : React.createElement(LoadingCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    });\n    global.wOtherList = otherCategory.length ? otherCategory.map(product => {\n      return React.createElement(ProductCard, {\n        product: product,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      });\n    }) : React.createElement(LoadingCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    });\n    const sectionList = this.state.services.map(service => {\n      return React.createElement(\"section\", {\n        id: service.replace(/\\s/g, ''),\n        className: \"service\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          fontWeight: \"bold\",\n          paddingLeft: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, service), this.getList(service));\n    });\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"cartAtBottom\",\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.props.toggleCartModal,\n      style: {\n        height: \"50px\",\n        width: \"400px\",\n        margin: \"2px\",\n        backgroundImage: \"linear-gradient(to right, #667eea, #764ba2, #6B8DD6, #8E37D7)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      style: {\n        textAlign: \"left\",\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      className: \"badge-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, this.state.cartNumbers), \"\\xA0\\xA0$\", this.props.cartState.cartCost)), React.createElement(Col, {\n      sm: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      style: {\n        textAlign: \"right\",\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-chevron-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })))), React.createElement(CartModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }))), React.createElement(Link, {\n      id: \"back\",\n      to: \"/ApplianceRepair/fridgeRepair\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-chevron-left\",\n      style: {\n        fontSize: \"50px\",\n        marginLeft: \"10%\",\n        position: \"absolute\",\n        top: \"9%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      style: {\n        fontWeight: \"bold\",\n        letterSpacing: \"2px\",\n        textTransform: \"uppercase\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Professional Refrigerator Repairing\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"servicesSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"servicesNav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Scrollspy, {\n      items: trimmedServices,\n      currentClassName: \"btn-is-current\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, servicesList)), React.createElement(\"div\", {\n      className: \"servicesDescription\",\n      style: {\n        borderLeft: \"1px solid gray\",\n        paddingLeft: \"3%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, sectionList)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  cartState: state.cartState\n});\n\nexport default connect(mapStateToProps, {\n  toggleCartModal,\n  addProductFromDB\n})(FridgeRepairCart);","map":{"version":3,"sources":["/Users/Aayush/Desktop/Web Design/WebDesignProject/src/components/Services/ApplianceRepair/fridgeRepair/FridgeRepairCart.js"],"names":["React","Component","Scrollspy","Button","Row","Col","Badge","connect","toggleCartModal","CartModal","addProductFromDB","Axios","ProductCard","LoadingCard","Link","FridgeRepairCart","constructor","props","getList","name","global","rRepairList","rCoolingList","rGasList","rOtherList","state","services","products","componentDidMount","get","then","res","console","log","data","tempList","map","product","push","cartState","setState","catch","err","render","trimmedServices","category","replace","servicesList","length","marginBottom","marginLeft","repairCategory","coolingCategory","gasCategory","otherCategory","wOtherList","sectionList","service","fontWeight","paddingLeft","textAlign","height","width","margin","backgroundImage","color","cartNumbers","cartCost","fontSize","position","top","letterSpacing","textTransform","borderLeft","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Scrollspy from 'react-scrollspy';\nimport { Button } from \"reactstrap\";\nimport { Row, Col, Badge } from \"reactstrap\";\nimport \"../../../../assets/vendor/font-awesome/css/font-awesome.min.css\";\nimport { connect } from 'react-redux';\nimport { toggleCartModal } from '../../../../actions/toggleCartModal';\nimport CartModal from './CartModal';\nimport { addProductFromDB } from '../../../../actions/addInputs/addProductFromDB';\nimport Axios from 'axios';\nimport ProductCard from './ProductCard';\nimport LoadingCard from './LoadingCard';\nimport { Link } from \"react-router-dom\";\n\n\n  \n\nclass FridgeRepairCart extends Component {\n    constructor(props){\n        super(props);\n  \n        this.state = {\n          services: ['Service/Repair', 'Compressor/Cooling','Gas Filling','Other Issues'],\n          products: []\n        };\n    }\n\n    componentDidMount(){\n        Axios.get('http://localhost:5000/ApplianceRepair/fridge')\n            .then(res=>{\n                console.log(res.data);\n                let tempList = []\n                // res.data.map(product=> this.props.addProductFromDB(product));\n                res.data.map(product => tempList.push(product));\n                console.log(this.props.cartState);\n                this.setState({\n                    products: tempList\n                })\n            })\n            .catch(err=>{\n                console.log(err)\n            });\n    }\n\n    getList = (name) =>{\n        switch (name) {\n            case 'Service/Repair':\n                return global.rRepairList;\n            case 'Compressor/Cooling':\n                return global.rCoolingList;\n            case 'Gas Filling':\n                return global.rGasList;\n            case 'Other Issues':\n                return global.rOtherList;\n            default:\n                break;\n        }\n    }\n\n    \n\n    render() {\n        console.log(this.state);\n        const { services } = this.state;\n\n        const trimmedServices = services.map(category => category.replace(/\\s/g,''));\n\n        const servicesList = (services.length) ? (\n            services.map(category=>{\n                return(\n                    <li key={category}><a href={\"#\"+category.replace(/\\s/g, '')}><Button color=\"default\" outline type=\"button\" style={{marginBottom:\"6px\",marginLeft:\"5%\"}}>{category}</Button></a></li>\n                )\n            })\n        ):(\n            <li><a href={\"#fetching\"}><Button color=\"default\" outline type=\"button\" style={{marginBottom:\"6px\"}}>Fetching...</Button></a></li>\n        );\n\n        \n        const repairCategory = [];\n        for(var product in this.state.products){\n            if(this.state.products[product].category === 'Service/Repair')\n                repairCategory.push(this.state.products[product])\n        }\n\n        const coolingCategory = [];\n        for(var product in this.state.products){\n            if(this.state.products[product].category === 'Compressor/Cooling')\n                coolingCategory.push(this.state.products[product])\n        }\n      \n\n        const gasCategory = [];\n        for(var product in this.state.products){\n            if(this.state.products[product].category === 'Gas Filling')\n                gasCategory.push(this.state.products[product])\n        }\n        \n\n        const otherCategory = [];\n        for(var product in this.state.products){\n            if(this.state.products[product].category === 'Other Issues')\n                otherCategory.push(this.state.products[product])\n        }\n\n        \n\n        global.rRepairList = (repairCategory.length) ? (\n            repairCategory.map(product => {\n                return(                    \n                    <ProductCard product={product}/>\n                ) \n            })\n        ) : (\n            <LoadingCard />\n        );\n\n        global.rCoolingList = (coolingCategory.length) ? (\n            coolingCategory.map(product => {\n                return(\n                    <ProductCard product={product}/>\n                ) \n            })\n        ) : (\n            <LoadingCard />\n        );\n\n        global.rGasList = (gasCategory.length) ? (\n            gasCategory.map(product => {\n                return(\n                    <ProductCard product={product}/>\n                ) \n            })\n        ) : (\n            <LoadingCard />\n        );\n\n        global.wOtherList = (otherCategory.length) ? (\n            otherCategory.map(product => {\n                return(\n                   <ProductCard product={product}/>\n                ) \n            })\n        ) : (\n            <LoadingCard />\n        );\n\n        const sectionList = this.state.services.map(service =>{\n            return(\n                <section id={service.replace(/\\s/g,'')} className=\"service\">\n                    <h3 style={{fontWeight:\"bold\", paddingLeft:\"10px\"}}>{service}</h3>             \n                    {this.getList(service)}                            \n                </section>\n            );\n        });\n        \n        \n        return (\n            <>\n\n                <div className=\"cartAtBottom\" style={{textAlign:\"right\"}}>\n                    <Button onClick={this.props.toggleCartModal} style={{height:\"50px\", width:\"400px\", margin:\"2px\", backgroundImage:\"linear-gradient(to right, #667eea, #764ba2, #6B8DD6, #8E37D7)\"}}>\n                    <Row>\n                        <Col sm=\"6\">\n                            <h5 style={{textAlign:\"left\", color:\"white\"}}><Badge className=\"badge-white\">{this.state.cartNumbers}</Badge>&nbsp;&nbsp;${this.props.cartState.cartCost}</h5> \n                        </Col>\n                        <Col sm=\"6\">\n                            <h5 style={{textAlign:\"right\", color:\"white\"}}><i className=\"fa fa-chevron-up\"></i></h5>                             \n                        </Col>\n                    </Row>\n                    <CartModal/>\n                    </Button>\n                </div>\n\n                <Link id=\"back\" to=\"/ApplianceRepair/fridgeRepair\"><i className=\"fa fa-chevron-left\" style={{fontSize:\"50px\", marginLeft:\"10%\", position:\"absolute\", top:\"9%\"}}/></Link>\n\n                <h1 style={{fontWeight:\"bold\", letterSpacing:\"2px\", textTransform:\"uppercase\", textAlign:\"center\"}}>Professional Refrigerator Repairing</h1>\n                <br></br><br></br>\n                <div className=\"servicesSection\">\n                    <div className=\"servicesNav\">\n                        <Scrollspy items={ trimmedServices } currentClassName=\"btn-is-current\">\n                                {servicesList}\n                        </Scrollspy>\n                    </div>\n\n                    <div className=\"servicesDescription\" style={{borderLeft:\"1px solid gray\", paddingLeft:\"3%\"}}>\n                        {sectionList}\n                    </div>\n\n                </div>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    cartState: state.cartState\n});\n\nexport default connect(mapStateToProps,{ toggleCartModal, addProductFromDB })(FridgeRepairCart);"]},"metadata":{},"sourceType":"module"}