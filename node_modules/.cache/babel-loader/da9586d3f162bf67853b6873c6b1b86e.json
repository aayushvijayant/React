{"ast":null,"code":"var _jsxFileName = \"/Users/Aayush/Desktop/Web Design/WebDesignProject/src/components/PayPalCheckoutButton.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport paypal from 'paypal-checkout';\nimport PaymentHistory from './PaymentHistory';\nimport { connect } from 'react-redux';\nimport { setPayment } from '../actions/setPayment';\nimport { emptyCart } from '../actions/emptyCart';\nimport Axios from 'axios';\n\nclass PayPalCheckoutButton extends React.Component {\n  render() {\n    const order = this.props.order; // console.log(this.props);\n\n    const paypalConf = {\n      currency: 'USD',\n      env: 'sandbox',\n      client: {\n        sandbox: 'Aa-gcAbCVGfyOR4wSu6T2FBqEt8Qt4U0xBdgUK9bKAHJk_Dy8Q1HuVQg61mxmIIlJflpxP0m658Z3qmE',\n        production: '--'\n      },\n      style: {\n        layout: 'vertical',\n        label: 'pay',\n        size: 'medium',\n        // small | medium | large | responsive\n        shape: 'rect',\n        // pill | rect\n        color: 'gold' // gold | blue | silver | black\n\n      }\n    };\n    const PayPalButton = paypal.Button.driver('react', {\n      React,\n      ReactDOM\n    });\n\n    const payment = (data, actions) => {\n      const payment = {\n        transactions: [{\n          amount: {\n            total: order.total,\n            currency: paypalConf.currency\n          },\n          custom: order.customer + ' ' + order.bookDate + ' ' + order.bookTime,\n          item_list: {\n            items: order.items,\n            shipping_address: order.address\n          }\n        }],\n        note_to_payer: 'Thank You For Your Purchase',\n        redirect_urls: {\n          return_url: \"https://www.youtube.com/\",\n          cancel_url: \"https://www.google.com/\"\n        }\n      }; // console.log(payment);\n\n      return actions.payment.create({\n        payment\n      });\n    };\n\n    const onAuthorize = (data, actions) => {\n      return actions.payment.execute().then(response => {\n        console.log(response);\n        this.props.emptyCart();\n        Axios.post('http://localhost:5000/users/addPayment', {\n          username: this.props.userState.user.username,\n          payment: response\n        }, {\n          \"headers\": {\n            'Content-Type': 'application/json'\n          }\n        }).then(res => {\n          console.log(res);\n        }).catch(err => {\n          console.log(err);\n        });\n        this.props.setPayment(response);\n        console.log(this.props.userState);\n        alert(`Thank You ! The payment was processed correctly, ID: ${response.id}`);\n        window.location = \"/\";\n      }).catch(error => {\n        console.log(error);\n        alert('Something went wrong while processing the payment');\n      });\n    };\n\n    const onError = error => {\n      alert('Error in Payment');\n    };\n\n    const onCancel = (data, actions) => {\n      alert('Payment cancelled by the user');\n    };\n\n    return React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(PayPalButton, {\n      env: paypalConf.env,\n      client: paypalConf.client,\n      payment: (data, actions) => payment(data, actions),\n      onAuthorize: (data, actions) => onAuthorize(data, actions),\n      onCancel: (data, actions) => onCancel(data, actions),\n      onError: error => onError(error),\n      style: paypalConf.style,\n      commit: true,\n      locale: \"en_US\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userState: state.userState\n});\n\nexport default connect(mapStateToProps, {\n  setPayment,\n  emptyCart\n})(PayPalCheckoutButton);","map":{"version":3,"sources":["/Users/Aayush/Desktop/Web Design/WebDesignProject/src/components/PayPalCheckoutButton.js"],"names":["React","ReactDOM","paypal","PaymentHistory","connect","setPayment","emptyCart","Axios","PayPalCheckoutButton","Component","render","order","props","paypalConf","currency","env","client","sandbox","production","style","layout","label","size","shape","color","PayPalButton","Button","driver","payment","data","actions","transactions","amount","total","custom","customer","bookDate","bookTime","item_list","items","shipping_address","address","note_to_payer","redirect_urls","return_url","cancel_url","create","onAuthorize","execute","then","response","console","log","post","username","userState","user","res","catch","err","alert","id","window","location","error","onError","onCancel","textAlign","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport paypal from 'paypal-checkout';\nimport PaymentHistory from './PaymentHistory';\nimport { connect } from 'react-redux';\nimport { setPayment } from '../actions/setPayment';\nimport { emptyCart } from '../actions/emptyCart';\nimport Axios from 'axios';\n\n\nclass PayPalCheckoutButton extends React.Component {\n    \n    render(){\n          const order  = this.props.order;\n          // console.log(this.props);\n          const paypalConf = {\n            currency: 'USD',\n            env: 'sandbox',\n            client: {\n              sandbox: 'Aa-gcAbCVGfyOR4wSu6T2FBqEt8Qt4U0xBdgUK9bKAHJk_Dy8Q1HuVQg61mxmIIlJflpxP0m658Z3qmE',\n              production: '--',\n            },\n            style: {\n              layout:'vertical',\n              label: 'pay',\n              size: 'medium', // small | medium | large | responsive\n              shape: 'rect',   // pill | rect\n              color: 'gold',  // gold | blue | silver | black\n            },\n          };\n        \n          const PayPalButton = paypal.Button.driver('react', { React, ReactDOM });\n        \n          const payment = (data, actions) => {\n            const payment = {\n              transactions: [\n                {\n                  amount: {\n                    total: order.total,\n                    currency: paypalConf.currency,\n                  },\n                  custom: order.customer + ' ' + order.bookDate + ' ' + order.bookTime,\n                  item_list: {\n                    items: order.items,\n                    shipping_address:order.address\n                  },\n                },\n              ],\n              note_to_payer:'Thank You For Your Purchase',\n              redirect_urls:{\n                return_url:\"https://www.youtube.com/\",\n                cancel_url:\"https://www.google.com/\"\n              }\n            };\n        \n            // console.log(payment);\n            return actions.payment.create({\n              payment,\n            });\n          };\n          \n\n          \n          const onAuthorize = (data, actions) => {\n            return actions.payment.execute()\n              .then(response => {\n                console.log(response);\n                this.props.emptyCart();\n                Axios.post('http://localhost:5000/users/addPayment',\n                {\n                    username: this.props.userState.user.username,\n                    payment: response\n                },{\n                    \"headers\": {\n                      'Content-Type': 'application/json',\n                    }\n                  })\n                  .then(res=>{console.log(res)})\n                  .catch(err=>{console.log(err)})\n\n\n                this.props.setPayment(response);\n               \n                console.log(this.props.userState);\n                alert(`Thank You ! The payment was processed correctly, ID: ${response.id}`)\n                window.location = \"/\";\n\n              })\n              .catch(error => {\n                console.log(error);\n                  alert('Something went wrong while processing the payment');\n              });\n              \n          };\n        \n          const onError = (error) => {\n            alert ('Error in Payment' );\n          };\n        \n          const onCancel = (data, actions) => {\n            alert( 'Payment cancelled by the user' );\n          };\n          \n         \n          return (\n            <div style={{textAlign:\"left\"}}>\n                <PayPalButton\n              env={paypalConf.env}\n              client={paypalConf.client}\n              payment={(data, actions) => payment(data, actions)}\n              onAuthorize={(data, actions) => onAuthorize(data, actions)}\n              onCancel={(data, actions) => onCancel(data, actions)}\n              onError={(error) => onError(error)}\n              style={paypalConf.style}\n              commit\n              locale=\"en_US\"\n            />\n            </div>\n          \n            \n          );\n        }\n\n    }\n\n  const mapStateToProps = (state) => ({\n    userState: state.userState\n});\n  \n  export default connect(mapStateToProps, { setPayment, emptyCart })(PayPalCheckoutButton);  \n\n"]},"metadata":{},"sourceType":"module"}