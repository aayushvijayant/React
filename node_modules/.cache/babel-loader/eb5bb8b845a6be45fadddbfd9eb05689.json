{"ast":null,"code":"var _jsxFileName = \"/Users/Aayush/Desktop/Web Design/WebDesignProject/src/components/Services/Salon/Hair/CartModal.js\";\nimport React from 'react';\nimport { Button, Modal, ModalBody, ModalFooter, UncontrolledAlert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { toggleCartModal } from '../../../../actions/toggleCartModal';\nimport { Card, CardBody, CardTitle, CardText } from \"reactstrap\";\nimport { removeProductFromCart } from '../../../../actions/removeProduct';\nimport { addProductToCart } from '../../../../actions/addProduct';\nimport { Link } from 'react-router-dom';\n\nclass CartModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnClick = e => {\n      console.log(e);\n\n      if (Object.keys(this.props.userState.user).length === 0) {\n        alert(\"Please login to checkout\");\n      } else {\n        this.props.history.push(\"/payment\");\n      }\n    };\n\n    this.state = {\n      user: '',\n      error: 'false',\n      errorObject: ''\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    const productsList = [];\n\n    for (var product in this.props.cartState.productsInCart) {\n      productsList.push(this.props.cartState.productsInCart[product]);\n    }\n\n    console.log(productsList);\n    const productsInCart = productsList.length ? productsList.map(product => {\n      return React.createElement(Card, {\n        key: product.id,\n        body: true,\n        outline: true,\n        color: \"default\",\n        className: \"text-center\",\n        style: {\n          marginTop: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, product.name), React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, product.description), React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Price: $\", product.price), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Added: \", product.quantity), React.createElement(Button, {\n        color: \"success\",\n        onClick: () => this.props.addProductToCart(product),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Add\", \" \", React.createElement(\"i\", {\n        className: \"fa fa-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(Button, {\n        color: \"danger\",\n        onClick: () => this.props.removeProductFromCart(product),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Remove\", \" \", React.createElement(\"i\", {\n        className: \"fa fa-minus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))));\n    }) : React.createElement(Card, {\n      body: true,\n      outline: true,\n      color: \"default\",\n      className: \"text-center\",\n      style: {\n        marginTop: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Your Cart is Empty!\")));\n    console.log(this.props.cartState.productsInCart);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.props.cartState.showCart,\n      toggle: this.props.toggleCartModal,\n      size: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Your Shopping Cart\"), productsInCart, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      style: {\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"TOTAL: $ \", this.props.cartState.cartCost)), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.props.cartState.cartCost != 0 && React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.handleOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"CHECKOUT\"), React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.props.toggleCartModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  cartState: state.cartState,\n  userState: state.userState\n});\n\nexport default connect(mapStateToProps, {\n  toggleCartModal,\n  removeProductFromCart,\n  addProductToCart\n})(CartModal);","map":{"version":3,"sources":["/Users/Aayush/Desktop/Web Design/WebDesignProject/src/components/Services/Salon/Hair/CartModal.js"],"names":["React","Button","Modal","ModalBody","ModalFooter","UncontrolledAlert","connect","toggleCartModal","Card","CardBody","CardTitle","CardText","removeProductFromCart","addProductToCart","Link","CartModal","Component","constructor","props","handleOnClick","e","console","log","Object","keys","userState","user","length","alert","history","push","state","error","errorObject","render","productsList","product","cartState","productsInCart","map","id","marginTop","fontWeight","name","description","price","quantity","showCart","textAlign","cartCost","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,SAAxB,EAAmCC,WAAnC,EAAgDC,iBAAhD,QAAyE,YAAzE;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,qCAAhC;AACA,SACIC,IADJ,EAEIC,QAFJ,EAGIC,SAHJ,EAGeC,QAHf,QAIS,YAJT;AAKE,SAASC,qBAAT,QAAsC,mCAAtC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAGD,MAAMC,SAAN,SAAwBf,KAAK,CAACgB,SAA9B,CAAwC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SASlBC,aATkB,GASDC,CAAD,IAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;;AACA,UAAGG,MAAM,CAACC,IAAP,CAAY,KAAKN,KAAL,CAAWO,SAAX,CAAqBC,IAAjC,EAAuCC,MAAvC,KAAkD,CAArD,EAAuD;AACnDC,QAAAA,KAAK,CAAC,0BAAD,CAAL;AACH,OAFD,MAEK;AACD,aAAKV,KAAL,CAAWW,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACH;AACJ,KAhBiB;;AAEd,SAAKC,KAAL,GAAa;AACTL,MAAAA,IAAI,EAAE,EADG;AAETM,MAAAA,KAAK,EAAE,OAFE;AAGTC,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAKH;;AAWDC,EAAAA,MAAM,GAAE;AACJb,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKS,KAAjB;AAEA,UAAMI,YAAY,GAAG,EAArB;;AACA,SAAI,IAAIC,OAAR,IAAmB,KAAKlB,KAAL,CAAWmB,SAAX,CAAqBC,cAAxC,EAAuD;AACnDH,MAAAA,YAAY,CAACL,IAAb,CAAkB,KAAKZ,KAAL,CAAWmB,SAAX,CAAqBC,cAArB,CAAoCF,OAApC,CAAlB;AACH;;AACDf,IAAAA,OAAO,CAACC,GAAR,CAAYa,YAAZ;AAEA,UAAMG,cAAc,GAAGH,YAAY,CAACR,MAAb,GACnBQ,YAAY,CAACI,GAAb,CAAiBH,OAAO,IAAE;AACtB,aACI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,OAAO,CAACI,EAAnB;AAAuB,QAAA,IAAI,MAA3B;AAA4B,QAAA,OAAO,MAAnC;AAAoC,QAAA,KAAK,EAAC,SAA1C;AAAoD,QAAA,SAAS,EAAC,aAA9D;AAA4E,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAC;AAAX,SAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAC;AAAZ,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwCN,OAAO,CAACO,IAAhD,CADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWP,OAAO,CAACQ,WAAnB,CAFJ,EAGI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmBR,OAAO,CAACS,KAA3B,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAWT,OAAO,CAACU,QAAnB,CAJJ,EAKI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE,MAAM,KAAK5B,KAAL,CAAWL,gBAAX,CAA4BuB,OAA5B,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAiF,GAAjF,EAAqF;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArF,CALJ,EAMI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,OAAO,EAAE,MAAI,KAAKlB,KAAL,CAAWN,qBAAX,CAAiCwB,OAAjC,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAsF,GAAtF,EAA0F;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1F,CANJ,CADJ,CADJ;AAYH,KAbD,CADmB,GAgBnB,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,OAAO,MAAlB;AAAmB,MAAA,KAAK,EAAC,SAAzB;AAAmC,MAAA,SAAS,EAAC,aAA7C;AAA2D,MAAA,KAAK,EAAE;AAACK,QAAAA,SAAS,EAAC;AAAX,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADJ,CAhBJ;AAsBIpB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWmB,SAAX,CAAqBC,cAAjC;AAKR,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAKpB,KAAL,CAAWmB,SAAX,CAAqBU,QAApC;AAA8C,MAAA,MAAM,EAAE,KAAK7B,KAAL,CAAWX,eAAjE;AAAkF,MAAA,IAAI,EAAC,IAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAE;AAACyC,QAAAA,SAAS,EAAC,QAAX;AAAqBN,QAAAA,UAAU,EAAC;AAAhC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEKJ,cAFL,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAI,MAAA,KAAK,EAAE;AAACI,QAAAA,UAAU,EAAC,MAAZ;AAAoBM,QAAAA,SAAS,EAAC;AAA9B,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA8D,KAAK9B,KAAL,CAAWmB,SAAX,CAAqBY,QAAnF,CALJ,CADJ,EAQI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAK/B,KAAL,CAAWmB,SAAX,CAAqBY,QAArB,IAA+B,CAA/B,IAAoC,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,KAAK9B,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADxC,EAEA,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWX,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,CARJ,CADJ,CADJ;AAkBC;;AAzEgC;;AA6ExC,MAAM2C,eAAe,GAAGnB,KAAK,KAAI;AAC9BM,EAAAA,SAAS,EAAEN,KAAK,CAACM,SADa;AAE9BZ,EAAAA,SAAS,EAAEM,KAAK,CAACN;AAFa,CAAJ,CAA7B;;AAKA,eAAenB,OAAO,CAAC4C,eAAD,EAAkB;AAAE3C,EAAAA,eAAF;AAAmBK,EAAAA,qBAAnB;AAA0CC,EAAAA;AAA1C,CAAlB,CAAP,CAAuFE,SAAvF,CAAf","sourcesContent":["import React from 'react';\nimport { Button, Modal, ModalBody, ModalFooter, UncontrolledAlert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { toggleCartModal } from '../../../../actions/toggleCartModal';\nimport {\n    Card,\n    CardBody,\n    CardTitle, CardText\n  } from \"reactstrap\";\n  import { removeProductFromCart } from '../../../../actions/removeProduct';\n  import { addProductToCart } from '../../../../actions/addProduct';\n  import { Link } from 'react-router-dom';\n\n\n class CartModal extends React.Component {\n        constructor(props){\n            super(props);\n            this.state = {\n                user: '',\n                error: 'false',\n                errorObject: ''\n            }\n        }\n\n        handleOnClick = (e) =>{\n            console.log(e);\n            if(Object.keys(this.props.userState.user).length === 0){\n                alert(\"Please login to checkout\");\n            }else{\n                this.props.history.push(\"/payment\");\n            }\n        }\n    \n        render(){\n            console.log(this.state);\n\n            const productsList = [];\n            for(var product in this.props.cartState.productsInCart){\n                productsList.push(this.props.cartState.productsInCart[product])\n            }\n            console.log(productsList);\n\n            const productsInCart = productsList.length ? (\n                productsList.map(product=>{\n                    return (\n                        <Card key={product.id} body outline color=\"default\" className=\"text-center\" style={{marginTop:\"20px\"}}>\n                            <CardBody>\n                                <CardTitle style={{fontWeight:\"bold\"}}>{product.name}</CardTitle>\n                                <CardText>{product.description}</CardText>\n                                <CardText>Price: ${product.price}</CardText>\n                                <p>Added: {product.quantity}</p>\n                                <Button color=\"success\" onClick={() => this.props.addProductToCart(product)}>Add{\" \"}<i className=\"fa fa-plus\"></i></Button>\n                                <Button color=\"danger\" onClick={()=>this.props.removeProductFromCart(product)}>Remove{\" \"}<i className=\"fa fa-minus\"></i></Button>\n                            </CardBody>\n                        </Card>\n                    );\n                })\n            ):(\n                <Card body outline color=\"default\" className=\"text-center\" style={{marginTop:\"40px\"}}>\n                    <CardBody>                       \n                        <CardText>Your Cart is Empty!</CardText>\n                    </CardBody>\n                </Card>\n            );\n                console.log(this.props.cartState.productsInCart)\n            \n              \n       \n            \n        return(\n            <div>\n                <Modal isOpen={this.props.cartState.showCart} toggle={this.props.toggleCartModal} size=\"md\">\n                    <ModalBody>\n                        <h3 style={{textAlign:\"center\", fontWeight:\"bold\"}}>Your Shopping Cart</h3>\n                        {productsInCart}\n                        <br></br>\n                        <br></br>\n                        <h5 style={{fontWeight:\"bold\", textAlign:\"center\"}}>TOTAL: $ {this.props.cartState.cartCost}</h5>\n                    </ModalBody>\n                    <ModalFooter>\n                    {   this.props.cartState.cartCost!=0 && <Button color=\"primary\" onClick={this.handleOnClick}>CHECKOUT</Button> }                        \n                    <Button color=\"secondary\" onClick={this.props.toggleCartModal}>Cancel</Button>                    \n                    </ModalFooter>                   \n                </Modal>\n                \n            </div>\n        );\n        }\n        \n }\n\n const mapStateToProps = state =>({\n    cartState: state.cartState,\n    userState: state.userState\n });\n\n export default connect(mapStateToProps, { toggleCartModal, removeProductFromCart, addProductToCart })(CartModal);"]},"metadata":{},"sourceType":"module"}