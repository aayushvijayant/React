{"ast":null,"code":"var _jsxFileName = \"/Users/Aayush/Desktop/Web Design/WebDesignProject/src/components/Payment.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport paypal from 'paypal-checkout';\nimport PaypalCheckoutButton from './PayPalCheckoutButton';\nimport { Col, Button, Form, FormGroup, Label, Input, FormText, Row, Table } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nclass Payment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChangeTextBox = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSelectList = e => {\n      this.setState({\n        mystate: e.target.value\n      });\n    };\n\n    this.handleError = e => {\n      const x = e.target.name + \"Error\";\n\n      if (e.target.value === \"\" || e.target.value === \"none\") {\n        this.setState({\n          [x]: \"is-invalid\"\n        });\n      } else {\n        this.setState({\n          [x]: \"\"\n        });\n      }\n    };\n\n    this.handleAddressError = e => {\n      if (!this.state.address1.match(this.state.regExAddress)) {\n        this.setState({\n          address1: \"\",\n          address1Error: \"is-invalid\"\n        });\n      } else {\n        this.setState({\n          address1Error: \"\"\n        });\n      }\n    };\n\n    this.handleCityError = e => {\n      if (!this.state.city.match(this.state.regExName)) {\n        this.setState({\n          city: \"\",\n          cityError: \"is-invalid\"\n        });\n      } else {\n        this.setState({\n          cityError: \"\"\n        });\n      }\n    };\n\n    this.handleNameError = e => {\n      if (!this.state.name.match(this.state.regExName)) {\n        this.setState({\n          name: \"\",\n          nameError: \"is-invalid\"\n        });\n      } else {\n        this.setState({\n          nameError: \"\"\n        });\n      }\n    };\n\n    this.handlePhoneError = e => {\n      if (!this.state.number.match(this.state.regExPhone)) {\n        this.setState({\n          number: \"\",\n          numberError: \"is-invalid\"\n        });\n      } else {\n        this.setState({\n          numberError: \"\"\n        });\n      }\n    };\n\n    this.handleZipCodeError = e => {\n      if (!this.state.zip.match(this.state.regExZipCode)) {\n        this.setState({\n          zip: \"\",\n          zipError: \"is-invalid\"\n        });\n      } else {\n        this.setState({\n          zipError: \"\"\n        });\n      }\n    };\n\n    this.state = {\n      name: \"\",\n      number: \"\",\n      zip: \"\",\n      city: \"\",\n      address1: \"\",\n      address2: \"\",\n      date: \"\",\n      time: \"\",\n      mystate: \"none\",\n      regExName: /^[a-zA-Z][a-zA-Z ]*[a-zA-Z]$/,\n      regExPhone: /\\d{3}-?\\d{3}-\\d{4}$/,\n      regExZipCode: /^\\d{5}$/,\n      regExAddress: /^[a-zA-Z0-9][-,a-zA-Z0-9 ]*[a-zA-Z0-9]$/,\n      nameError: \"\",\n      numberError: \"\",\n      zipError: \"\",\n      cityError: \"\",\n      address1Error: \"\",\n      mystateError: \"\",\n      zipError: \"\",\n      dateError: \"\"\n    };\n  }\n\n  render() {\n    const productsList = [];\n\n    for (var product in this.props.cartState.productsInCart) {\n      productsList.push(this.props.cartState.productsInCart[product]);\n    }\n\n    var count = 0;\n    var itemlist = [];\n    const products = productsList.map(product => {\n      itemlist.push({\n        name: product.name,\n        description: product.description,\n        price: product.price,\n        quantity: product.quantity,\n        currency: 'USD'\n      });\n      count++;\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, count), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, product.name), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, product.description)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, product.quantity), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"$ \", product.quantity * product.price));\n    });\n    const order = {\n      customer: this.state.name,\n      total: this.props.cartState.cartCost,\n      items: itemlist,\n      bookDate: this.state.date,\n      bookTime: this.state.time,\n      address: {\n        line1: this.state.address1,\n        line2: this.state.address2,\n        city: this.state.city,\n        country_code: \"US\",\n        postal_code: this.state.zip,\n        state: this.state.mystate\n      }\n    };\n    const myArr = [\"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\"];\n    const usaStates = myArr.map(x => {\n      return React.createElement(\"option\", {\n        value: x,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, x);\n    });\n    return React.createElement(\"div\", {\n      style: {\n        width: \"70%\",\n        marginLeft: \"15%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        fontWeight: \"550\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Your Order\"), React.createElement(Table, {\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      style: {\n        fontSize: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"No.\"), React.createElement(\"th\", {\n      style: {\n        fontSize: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Service Name\"), React.createElement(\"th\", {\n      style: {\n        fontSize: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Quantity\"), React.createElement(\"th\", {\n      style: {\n        fontSize: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Price\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, products, React.createElement(\"tr\", {\n      style: {\n        borderTop: \"1px solid gray\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      style: {\n        fontSize: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Total :\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"$ \", this.props.cartState.cartCost)))), React.createElement(\"h3\", {\n      style: {\n        fontWeight: \"550\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Enter Details\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(Row, {\n      form: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Name*\"), React.createElement(Input, {\n      className: this.state.nameError,\n      type: \"text\",\n      name: \"name\",\n      required: true,\n      id: \"exampleName\",\n      placeholder: \"Your Name\",\n      value: this.state.name,\n      onBlur: this.handleNameError,\n      onChange: this.handleOnChangeTextBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Number*\"), React.createElement(Input, {\n      className: this.state.numberError,\n      type: \"text\",\n      name: \"number\",\n      required: true,\n      id: \"exampleNumber\",\n      placeholder: \"XXX-XXX-XXXX\",\n      value: this.state.number,\n      onBlur: this.handlePhoneError,\n      onChange: this.handleOnChangeTextBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      form: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Date*\"), React.createElement(Input, {\n      className: this.state.dateError,\n      required: true,\n      type: \"date\",\n      name: \"date\",\n      id: \"exampleDate\",\n      placeholder: \"Select Date\",\n      value: this.state.date,\n      onBlur: this.handleError,\n      onChange: this.handleOnChangeTextBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleTime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Time\"), React.createElement(Input, {\n      type: \"time\",\n      name: \"time\",\n      id: \"exampleTime\",\n      placeholder: \"Select Time\",\n      value: this.state.time,\n      onChange: this.handleOnChangeTextBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    })))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleAddress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"Address*\"), React.createElement(Input, {\n      className: this.state.address1Error,\n      type: \"text\",\n      name: \"address1\",\n      required: true,\n      id: \"exampleAddress\",\n      placeholder: \"1234 Main St\",\n      value: this.state.address1,\n      onBlur: this.handleAddressError,\n      onChange: this.handleOnChangeTextBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleAddress2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Address 2\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"address2\",\n      id: \"exampleAddress2\",\n      placeholder: \"Apartment, studio, or floor\",\n      value: this.state.address2,\n      onChange: this.handleOnChangeTextBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    })), React.createElement(Row, {\n      form: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"City*\"), React.createElement(Input, {\n      className: this.state.cityError,\n      type: \"text\",\n      name: \"city\",\n      required: true,\n      id: \"exampleCity\",\n      value: this.state.city,\n      onBlur: this.handleCityError,\n      onChange: this.handleOnChangeTextBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleState\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"State*\"), React.createElement(Input, {\n      className: this.state.mystateError,\n      type: \"select\",\n      name: \"mystate\",\n      required: true,\n      id: \"exampleSelect\",\n      value: this.state.mystate,\n      onBlur: this.handleError,\n      onChange: this.handleSelectList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \" --Select-- \"), usaStates))), React.createElement(Col, {\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleZip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Zip*\"), React.createElement(Input, {\n      className: this.state.zipError,\n      type: \"text\",\n      name: \"zip\",\n      placeholder: \"XXXXX\",\n      required: true,\n      id: \"exampleZip\",\n      value: this.state.zip,\n      onBlur: this.handleZipCodeError,\n      onChange: this.handleOnChangeTextBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), this.state.name !== \"\" && this.state.number !== \"\" && this.state.city !== \"\" && this.state.address1 !== \"\" && this.state.date != \"\" && this.state.zip !== \"\" && this.state.mystate !== \"none\" && React.createElement(PaypalCheckoutButton, {\n      order: order,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  cartState: state.cartState,\n  userState: state.userState\n});\n\nexport default connect(mapStateToProps)(Payment);","map":{"version":3,"sources":["/Users/Aayush/Desktop/Web Design/WebDesignProject/src/components/Payment.js"],"names":["React","Component","ReactDOM","paypal","PaypalCheckoutButton","Col","Button","Form","FormGroup","Label","Input","FormText","Row","Table","connect","Payment","constructor","props","handleOnChangeTextBox","e","setState","target","name","value","handleSelectList","mystate","handleError","x","handleAddressError","state","address1","match","regExAddress","address1Error","handleCityError","city","regExName","cityError","handleNameError","nameError","handlePhoneError","number","regExPhone","numberError","handleZipCodeError","zip","regExZipCode","zipError","address2","date","time","mystateError","dateError","render","productsList","product","cartState","productsInCart","push","count","itemlist","products","map","description","price","quantity","currency","order","customer","total","cartCost","items","bookDate","bookTime","address","line1","line2","country_code","postal_code","myArr","usaStates","width","marginLeft","fontWeight","fontSize","borderTop","mapStateToProps","userState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport paypal from 'paypal-checkout';\nimport PaypalCheckoutButton from './PayPalCheckoutButton';\nimport { Col, Button, Form, FormGroup, Label, Input, FormText, Row, Table } from 'reactstrap';\nimport { connect } from 'react-redux';\n\n\nclass Payment extends Component{\n    constructor(props)\n    {\n        super(props)\n        this.state={\n            name:\"\",\n            number:\"\",\n            zip:\"\",\n            city:\"\",\n            address1:\"\",\n            address2:\"\",\n            date:\"\",\n            time:\"\",\n            mystate:\"none\",\n            regExName : /^[a-zA-Z][a-zA-Z ]*[a-zA-Z]$/,\n            regExPhone : /\\d{3}-?\\d{3}-\\d{4}$/,\n            regExZipCode : /^\\d{5}$/,\n            regExAddress: /^[a-zA-Z0-9][-,a-zA-Z0-9 ]*[a-zA-Z0-9]$/,\n            nameError:\"\",\n            numberError:\"\",\n            zipError:\"\",\n            cityError:\"\",\n            address1Error:\"\",\n            mystateError:\"\",\n            zipError:\"\",\n            dateError:\"\"\n        }\n    }\n\n\n\n    handleOnChangeTextBox = e => {\n      this.setState({\n          [e.target.name]: e.target.value\n      })\n     }\n\n     handleSelectList = e => {\n      this.setState({\n          mystate: e.target.value\n      })\n    }\n    \n    \n\n    handleError = e =>{\n      const x=e.target.name + \"Error\";\n      if(e.target.value===\"\" || e.target.value===\"none\"){\n          this.setState({\n              [x]:\"is-invalid\"\n          })\n      }else{\n          this.setState({\n              [x]: \"\"\n          })\n      }\n    }\n\n    handleAddressError = e =>{\n      if(!this.state.address1.match(this.state.regExAddress)){\n          this.setState({\n              address1: \"\",\n              address1Error:\"is-invalid\"\n          })\n      }else{\n          this.setState({\n            address1Error: \"\"\n          })\n      }\n    }\n\n    handleCityError = e =>{\n      if(!this.state.city.match(this.state.regExName)){\n          this.setState({\n              city: \"\",\n              cityError:\"is-invalid\"\n          })\n      }else{\n          this.setState({\n              cityError: \"\"\n          })\n      }\n    }\n\n    handleNameError = e =>{\n      if(!this.state.name.match(this.state.regExName)){\n          this.setState({\n              name: \"\",\n              nameError:\"is-invalid\"\n          })\n      }else{\n          this.setState({\n              nameError: \"\"\n          })\n      }\n    }\n\n\n\n    handlePhoneError = e =>{\n      if(!this.state.number.match(this.state.regExPhone)){\n          this.setState({\n              number: \"\",\n              numberError:\"is-invalid\"\n          })\n      }else{\n          this.setState({\n              numberError: \"\"\n          })\n      }\n    }\n\n  handleZipCodeError = e =>{\n    if(!this.state.zip.match(this.state.regExZipCode)){\n        this.setState({\n            zip: \"\",\n            zipError:\"is-invalid\"\n        })\n    }else{\n        this.setState({\n            zipError: \"\"\n        })\n      }\n    }\n\n\n   \n\n\n    render(){\n\n      const productsList = [];\n        for(var product in this.props.cartState.productsInCart){\n            productsList.push(this.props.cartState.productsInCart[product])\n        }\n       \n      var count=0;\n      var itemlist=[]\n      const products=productsList.map(product=>{\n        itemlist.push({\n            name: product.name,\n            description: product.description,\n            price: product.price,\n            quantity: product.quantity,\n            currency: 'USD'\n        },)\n        count++;\n        return (\n              <tr>\n                <th scope=\"row\">{count}</th>\n                <td><strong>{product.name}</strong><br></br><p>{product.description}</p></td>\n                <td>{product.quantity}</td>\n                <td>$ {product.quantity*product.price}</td>\n              </tr> \n        )\n      });\n\n\n      const order = {\n        customer: this.state.name,\n        total: this.props.cartState.cartCost,\n        items: itemlist,\n        bookDate:this.state.date,\n        bookTime:this.state.time,\n        address: {\n          line1: this.state.address1,\n          line2: this.state.address2,\n          city:this.state.city,\n          country_code: \"US\",\n          postal_code: this.state.zip,\n          state:this.state.mystate,\n        },\n      };\n      \n      const myArr=[\"AL\",\"AK\",\"AZ\",\"AR\",\"CA\",\"CO\",\"CT\",\"DE\",\"FL\",\"GA\",\"HI\",\"ID\",\n      \"IL\",\"IN\",\"IA\",\"KS\",\"KY\",\"LA\",\"ME\",\"MD\",\"MA\",\"MI\",\"MN\",\"MS\",\"MO\",\"MT\",\n      \"NE\",\"NV\",\"NH\",\"NJ\",\"NM\",\"NY\",\"NC\",\"ND\",\"OH\",\"OK\",\"OR\",\"PA\",\"RI\",\n      \"SC\",\"SD\",\"TN\",\"TX\",\"UT\",\"VT\",\"VA\",\"WA\",\"WV\",\"WI\",\"WY\"]\n      const usaStates= myArr.map(x=>{\n        return(\n          <option value={x}>{x}</option>\n        )\n      })\n\n    return(\n    <div style={{width:\"70%\", marginLeft:\"15%\"}}>\n    <h3 style={{fontWeight:\"550\"}} >Your Order</h3>\n         <Table responsive>\n            <thead>\n              <tr>\n                <th style={{fontSize:\"20px\"}}>No.</th>\n                <th style={{fontSize:\"20px\"}}>Service Name</th>\n                <th style={{fontSize:\"20px\"}}>Quantity</th>\n                <th style={{fontSize:\"20px\"}}>Price</th>\n              </tr>\n            </thead>\n            <tbody>\n            {products}\n            <tr style={{borderTop:\"1px solid gray\"}}>\n              <th scope=\"row\" style={{fontSize:\"20px\"}}>Total :</th>\n              <td></td>\n              <td></td>\n              <td>$ {this.props.cartState.cartCost}</td>\n            </tr>\n          </tbody>\n        </Table>\n   \n    <h3 style={{fontWeight:\"550\"}}>Enter Details</h3>\n    <br></br>\n      <Form>\n        <Row form>\n        <Col md={6}>\n          <FormGroup>\n            <Label for=\"exampleName\">Name*</Label>\n            <Input className={this.state.nameError} type=\"text\" name=\"name\" required id=\"exampleName\" placeholder=\"Your Name\" value={this.state.name} onBlur={this.handleNameError} onChange={this.handleOnChangeTextBox} />\n          </FormGroup>\n        </Col>\n        <Col md={6}>\n          <FormGroup>\n            <Label for=\"exampleNumber\">Number*</Label>\n            <Input className={this.state.numberError} type=\"text\" name=\"number\" required id=\"exampleNumber\" placeholder=\"XXX-XXX-XXXX\" value={this.state.number} onBlur={this.handlePhoneError} onChange={this.handleOnChangeTextBox} />\n          </FormGroup>\n        </Col>\n      </Row>\n      <Row form>\n        <Col md={6}>\n            <FormGroup>\n            <Label for=\"exampleDate\">Date*</Label>\n            <Input\n              className={this.state.dateError}\n              required\n              type=\"date\"\n              name=\"date\"\n              id=\"exampleDate\"\n              placeholder=\"Select Date\"\n              value={this.state.date}\n              onBlur={this.handleError}\n              onChange={this.handleOnChangeTextBox}\n            />\n          </FormGroup>\n        </Col>\n        <Col md={6}>\n            <FormGroup>\n            <Label for=\"exampleTime\">Time</Label>\n            <Input\n              type=\"time\"\n              name=\"time\"\n              id=\"exampleTime\"\n              placeholder=\"Select Time\"\n              value={this.state.time}\n              onChange={this.handleOnChangeTextBox}\n            />\n          </FormGroup>\n        </Col>\n      </Row>\n      <FormGroup>\n        <Label for=\"exampleAddress\">Address*</Label>\n        <Input className={this.state.address1Error} type=\"text\" name=\"address1\" required id=\"exampleAddress\" placeholder=\"1234 Main St\" value={this.state.address1} onBlur={this.handleAddressError} onChange={this.handleOnChangeTextBox}/>\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"exampleAddress2\">Address 2</Label>\n        <Input type=\"text\" name=\"address2\" id=\"exampleAddress2\"  placeholder=\"Apartment, studio, or floor\" value={this.state.address2} onChange={this.handleOnChangeTextBox} />\n      </FormGroup>\n      <Row form>\n\n        <Col md={6}>\n          <FormGroup>\n            <Label for=\"exampleCity\">City*</Label>\n            <Input className={this.state.cityError} type=\"text\" name=\"city\" required id=\"exampleCity\" value={this.state.city} onBlur={this.handleCityError} onChange={this.handleOnChangeTextBox}/>\n          </FormGroup>\n        </Col>\n        \n        <Col md={4}>\n          <FormGroup>\n            <Label for=\"exampleState\">State*</Label>\n            <Input className={this.state.mystateError} type=\"select\" name=\"mystate\" required id=\"exampleSelect\" value={this.state.mystate} onBlur={this.handleError} onChange={this.handleSelectList}  >\n              <option value=\"none\" > --Select-- </option>\n              {usaStates}\n          </Input>\n          </FormGroup>\n        </Col>\n       \n        <Col md={2}>\n          <FormGroup>\n            <Label for=\"exampleZip\">Zip*</Label>\n            <Input className={this.state.zipError} type=\"text\" name=\"zip\" placeholder=\"XXXXX\" required id=\"exampleZip\" value={this.state.zip} onBlur={this.handleZipCodeError} onChange={this.handleOnChangeTextBox} />\n          </FormGroup>  \n        </Col>\n\n      </Row>\n    </Form>\n      <br></br>\n     \n        { this.state.name!==\"\" && this.state.number!==\"\" && this.state.city!==\"\" && this.state.address1!==\"\" && this.state.date!=\"\" && this.state.zip!==\"\" && this.state.mystate!==\"none\" &&\n          <PaypalCheckoutButton  order={order} />}\n\n    </div>\n\n\n    )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n  cartState: state.cartState,\n  userState:state.userState\n});\nexport default connect(mapStateToProps)(Payment);"]},"metadata":{},"sourceType":"module"}