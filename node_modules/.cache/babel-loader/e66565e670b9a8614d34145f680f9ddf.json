{"ast":null,"code":"import { ADD_PRODUCT_CART, REMOVE_PRODUCT_CART, EMPTY_CART } from \"../actions/types\";\nimport { TOGGLE_CART_MODAL } from '../actions/types';\nconst initialState = {\n  cartNumbers: 0,\n  showCart: false,\n  cartCost: 0,\n  productsInCart: {}\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case ADD_PRODUCT_CART:\n      let addQuantity = { ...state.productsInCart[action.payload]\n      };\n      console.log(Object.keys(addQuantity).length === 0);\n\n      if (Object.keys(addQuantity).length === 0) {\n        addQuantity = action.payload;\n      }\n\n      addQuantity.quantity += 1;\n      addQuantity.inCart = true;\n      return { ...state,\n        cartNumbers: state.cartNumbers + 1,\n        cartCost: state.cartCost + addQuantity.price,\n        productsInCart: { ...state.productsInCart,\n          [action.payload.id]: addQuantity\n        }\n      };\n\n    case TOGGLE_CART_MODAL:\n      return { ...state,\n        showCart: !state.showCart\n      };\n\n    case REMOVE_PRODUCT_CART:\n      // let removeQuantity = {...state.productsInCart[action.payload]};\n      let removeQuantity = action.payload;\n      removeQuantity.quantity -= 1;\n\n      if (removeQuantity.quantity < 0) {\n        removeQuantity.quantity = 0;\n      }\n\n      if (removeQuantity.quantity == 0) removeQuantity.inCart = false;else removeQuantity.inCart = true;\n      let temp = state.productsInCart;\n\n      if (removeQuantity.quantity === 0) {\n        delete temp[action.payload.id.toString()]; // console.log(temp);\n\n        return { ...state,\n          cartNumbers: state.cartNumbers - 1,\n          cartCost: state.cartCost - removeQuantity.price,\n          productsInCart: temp\n        };\n      } else {\n        return { ...state,\n          cartNumbers: state.cartNumbers - 1,\n          cartCost: state.cartCost - removeQuantity.price,\n          productsInCart: { ...state.productsInCart,\n            [action.payload.id]: removeQuantity\n          }\n        };\n      }\n\n    case EMPTY_CART:\n      return {\n        cartNumbers: 0,\n        showCart: false,\n        cartCost: 0,\n        productsInCart: {}\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/Aayush/Desktop/Web Design/WebDesignProject/src/reducers/cartReducer.js"],"names":["ADD_PRODUCT_CART","REMOVE_PRODUCT_CART","EMPTY_CART","TOGGLE_CART_MODAL","initialState","cartNumbers","showCart","cartCost","productsInCart","state","action","type","addQuantity","payload","console","log","Object","keys","length","quantity","inCart","price","id","removeQuantity","temp","toString"],"mappings":"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","sourcesContent":["import { ADD_PRODUCT_CART, REMOVE_PRODUCT_CART, EMPTY_CART} from \"../actions/types\";\nimport { TOGGLE_CART_MODAL } from '../actions/types';\n\nconst initialState = {\n    cartNumbers: 0,\n    showCart: false,\n    cartCost: 0,\n    productsInCart: {}\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_PRODUCT_CART:\n            let addQuantity = {...state.productsInCart[action.payload]};\n            console.log(Object.keys(addQuantity).length===0);\n            if(Object.keys(addQuantity).length === 0){\n                addQuantity = action.payload\n            }\n            addQuantity.quantity += 1;\n            addQuantity.inCart = true;\n \n            return {\n                ...state,\n                cartNumbers: state.cartNumbers + 1,\n                cartCost: state.cartCost + addQuantity.price,\n                productsInCart:{\n                    ...state.productsInCart,\n                    [action.payload.id]: addQuantity\n                }\n            }\n        case TOGGLE_CART_MODAL:\n            return{\n                ...state,\n                showCart: !state.showCart\n            }\n        case REMOVE_PRODUCT_CART:\n            // let removeQuantity = {...state.productsInCart[action.payload]};\n            let removeQuantity = action.payload;\n            removeQuantity.quantity -= 1;\n            if(removeQuantity.quantity < 0 ) {\n                removeQuantity.quantity = 0;\n            }\n            if(removeQuantity.quantity == 0)\n                removeQuantity.inCart = false;\n            else\n                removeQuantity.inCart = true;\n            let temp = state.productsInCart;\n            if(removeQuantity.quantity===0){\n                delete temp[action.payload.id.toString()];\n                // console.log(temp);\n                return{\n                    ...state,\n                    cartNumbers: state.cartNumbers - 1,\n                    cartCost: state.cartCost - removeQuantity.price,\n                    productsInCart: temp\n                }\n            }else{\n                return{\n                    ...state,\n                    cartNumbers: state.cartNumbers - 1,\n                    cartCost: state.cartCost - removeQuantity.price,\n                    productsInCart: {\n                        ...state.productsInCart,\n                        [action.payload.id]: removeQuantity\n                    }\n                }\n            }\n        case EMPTY_CART:\n            return{\n                cartNumbers: 0,\n                showCart: false,\n                cartCost: 0,\n                productsInCart: {}\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}