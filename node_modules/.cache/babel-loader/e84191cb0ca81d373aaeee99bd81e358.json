{"ast":null,"code":"var _jsxFileName = \"/Users/Aayush/Desktop/Web Design/WebDesignProject/src/components/LoggedOut.js\";\nimport React, { Component } from 'react';\nimport { setUser } from '../actions/setUser';\nimport { connect } from 'react-redux';\nimport classnames from \"classnames\";\nimport { Modal, Card, CardHeader, CardBody, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Button, Nav } from \"reactstrap\";\nimport axios from 'axios';\nimport GoogleBtn from './GoogleBtn';\n\nclass LoggedOut extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = state => {\n      this.setState({\n        [state]: !this.state[state]\n      });\n    };\n\n    this.handleOnChangeLogin = (e, stateName) => {\n      let newState = this.state;\n\n      if (stateName === \"email\") {\n        const regexEmail = /([\\w\\.]+)@([\\w\\.]+)\\.(\\w+)/;\n        var validateEmail = e.target.value.match(regexEmail);\n\n        if (!validateEmail) {\n          newState[\"loginEmailState\"] = \"invalid\";\n          newState[\"loginEmailError\"] = \"Please enter valid Email Address\";\n        } else {\n          newState[\"loginEmailState\"] = \"valid\";\n        }\n      }\n\n      if (stateName === \"password\") {\n        if (newState.password === \"\") {\n          newState[\"loginPasswordState\"] = \"invalid\";\n          newState[\"loginPasswordError\"] = \"Password cannot be blank\";\n        } else {\n          newState[\"loginPasswordState\"] = \"valid\";\n        }\n      }\n\n      const isCheckbox = e.target.type === \"checkbox\";\n      this.setState({\n        [e.target.name]: isCheckbox ? e.target.checked : e.target.value\n      });\n    };\n\n    this.handleOnChange = (e, stateName) => {\n      let newState = this.state;\n\n      if (stateName === \"name\") {\n        const regexName = /^[A-Za-z][A-Za-z\\'\\-]+([\\A-Za-z][A-Za-z\\'\\-]+)*/;\n        var validateName = e.target.value.match(regexName);\n\n        if (!validateName) {\n          newState[stateName + \"State\"] = \"invalid\";\n          newState[stateName + \"Error\"] = \"Name should have more than 2 Letters\";\n        } else {\n          newState[stateName + \"State\"] = \"valid\";\n        }\n      }\n\n      if (stateName === \"email\") {\n        const regexEmail = /([\\w\\.]+)@([\\w\\.]+)\\.(\\w+)/;\n        var validateEmail = e.target.value.match(regexEmail);\n\n        if (!validateEmail) {\n          newState[stateName + \"State\"] = \"invalid\";\n          newState[stateName + \"Error\"] = \"Please enter valid Email Address\";\n        } else {\n          newState[stateName + \"State\"] = \"valid\";\n        }\n      }\n\n      if (stateName === \"password\") {\n        const regexPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&_])[A-Za-z\\d@$!%*?&]{8,}$/;\n        var validatePassword = e.target.value.match(regexPassword);\n\n        if (!validatePassword) {\n          newState[stateName + \"State\"] = \"invalid\";\n          newState[stateName + \"Error\"] = \"Password must contain atleast 1 Uppercase Letter, 1 Lowercase Letter, 1 Special Character and 1 Number \";\n        } else {\n          newState[stateName + \"State\"] = \"valid\";\n        }\n      }\n\n      const isCheckbox = e.target.type === \"checkbox\";\n      this.setState({\n        [e.target.name]: isCheckbox ? e.target.checked : e.target.value\n      });\n    };\n\n    this.handleLoginSubmit = e => {\n      e.preventDefault();\n      let newState = this.state;\n\n      if (newState.username === \"\") {\n        newState[\"loginEmailState\"] = \"invalid\";\n        newState[\"loginEmailError\"] = \"Email cannot be blank\";\n      } else {\n        newState[\"loginEmailState\"] = \"valid\";\n      }\n\n      if (newState.password === \"\") {\n        newState[\"loginPasswordState\"] = \"invalid\";\n        newState[\"loginPasswordError\"] = \"Password cannot be blank\";\n      }\n\n      this.setState({\n        loginPasswordState: newState[\"loginPasswordState\"],\n        loginEmailState: newState[\"loginEmailState\"],\n        loginEmailError: newState[\"loginEmailError\"],\n        loginPasswordError: newState[\"loginPasswordError\"]\n      });\n      if (newState[\"loginEmailState\"] == \"invalid\" || newState[\"loginPasswordState\"] == \"invalid\") return;\n      axios.get('http://localhost:5000/users/findByEmail/' + newState.username).then(res => {\n        if (Object.keys(res.data).length === 0) {\n          newState[\"loginEmailState\"] = \"invalid\";\n          newState[\"loginEmailError\"] = \"User doesnot exists!\";\n          this.setState({\n            loginEmailState: newState[\"loginEmailState\"],\n            loginEmailError: newState[\"loginEmailError\"]\n          });\n        } else {\n          const user = {\n            username: this.state.username,\n            password: this.state.password\n          };\n          axios.post('http://localhost:5000/users/login', {\n            username: this.state.username,\n            password: this.state.password\n          }, {\n            \"headers\": {\n              'Content-Type': 'application/json'\n            }\n          }).then(res => {\n            sessionStorage.setItem('user', JSON.stringify(res.data));\n            this.props.setUser(res.data);\n            console.log(this.props);\n          }).catch(err => {\n            newState[\"loginPasswordState\"] = \"invalid\";\n            newState[\"loginPasswordError\"] = \"Password is Incorrect\";\n            this.setState({\n              loginPasswordState: newState[\"loginPasswordState\"],\n              loginPasswordError: newState[\"loginPasswordError\"]\n            });\n          });\n          console.log(user);\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const regexName = /^[A-Za-z][A-Za-z\\'\\-]+([\\A-Za-z][A-Za-z\\'\\-]+)*/;\n      var validateName = this.state.name.match(regexName);\n      const regexEmail = /([\\w\\.]+)@([\\w\\.]+)\\.(\\w+)/;\n      var validateEmail = this.state.username.match(regexEmail);\n      const regexPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&_])[A-Za-z\\d@$!%*?&]{8,}$/;\n      var validatePassword = this.state.password.match(regexPassword);\n      let newState = this.state;\n\n      if (newState.username === \"\") {\n        newState[\"emailState\"] = \"invalid\";\n        newState[\"emailError\"] = \"Email cannot be blank\";\n      } else if (!validateEmail) {\n        newState[\"emailState\"] = \"invalid\";\n        newState[\"emailError\"] = \"Please enter valid Email Address\";\n      } else {\n        newState[\"emailState\"] = \"valid\";\n      }\n\n      if (newState.password === \"\") {\n        newState[\"passwordState\"] = \"invalid\";\n        newState[\"passwordError\"] = \"Password cannot be blank\";\n      } else if (!validatePassword) {\n        newState[\"passwordState\"] = \"invalid\";\n        newState[\"passwordError\"] = \"Password must contain atleast 1 Uppercase Letter, 1 Lowercase Letter, 1 Special Character and 1 Number \";\n      } else {\n        newState[\"passwordState\"] = \"valid\";\n      }\n\n      if (newState.name === \"\") {\n        newState[\"nameState\"] = \"invalid\";\n        newState[\"nameError\"] = \"Name cannot be blank\";\n      } else if (!validateName) {\n        newState[\"nameState\"] = \"invalid\";\n        newState[\"nameError\"] = \"Name should have more than 2 Letters\";\n      } else {\n        newState[\"nameState\"] = \"valid\";\n      }\n\n      this.setState({\n        nameState: newState[\"nameState\"],\n        passwordState: newState[\"passwordState\"],\n        emailState: newState[\"emailState\"],\n        emailError: newState[\"emailError\"],\n        nameError: newState[\"nameError\"],\n        passwordError: newState[\"passwordError\"]\n      });\n      if (newState[\"nameState\"] == \"invalid\" || newState[\"emailState\"] == \"invalid\" || newState[\"passwordState\"] == \"invalid\") return;\n      axios.get('http://localhost:5000/users/findByEmail/' + this.state.username).then(res => {\n        if (Object.keys(res.data).length !== 0) {\n          console.log(\"User Exists\");\n          newState[\"emailState\"] = \"invalid\";\n          newState[\"emailError\"] = \"User already exists!\";\n          this.setState({\n            emailState: newState[\"emailState\"],\n            emailError: newState[\"emailError\"]\n          });\n        } else {\n          const user = {\n            name: this.state.name,\n            username: this.state.username,\n            password: this.state.password\n          };\n          axios.post('http://localhost:5000/users/add', {\n            name: this.state.name,\n            username: this.state.username,\n            password: this.state.password\n          }, {\n            \"headers\": {\n              'Content-Type': 'application/json'\n            }\n          }).then(res => {\n            console.log(res.data);\n          }).catch(err => console.log(err));\n          console.log(user);\n          this.setState({\n            defaultModal: false,\n            nameState: '',\n            emailState: '',\n            passwordState: '',\n            username: '',\n            name: '',\n            password: '',\n            emailError: '',\n            passwordError: '',\n            nameError: ''\n          });\n          this.toggleModal(\"signUpModal\");\n          this.toggleModal(\"loginSignUpModal\");\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      defaultModal: false,\n      name: '',\n      username: '',\n      password: '',\n      nameState: '',\n      emailState: '',\n      passwordState: '',\n      emailError: '',\n      nameError: '',\n      passwordError: '',\n      loginEmailState: '',\n      loginEmailError: '',\n      loginPasswordState: '',\n      loginPasswordError: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ml-lg-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"white\",\n      outline: true,\n      type: \"button\",\n      size: \"sm\",\n      onClick: () => this.toggleModal(\"loginSignUpModal\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"Login / Sign Up\")), React.createElement(Modal, {\n      className: \"modal-dialog-centered\",\n      size: \"sm\",\n      isOpen: this.state.loginSignUpModal,\n      toggle: () => this.toggleModal(\"loginSignUpModal\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-body p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"bg-secondary shadow border-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      className: \"bg-transparent pb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-muted text-center mt-2 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, \"Login with\"), React.createElement(\"div\", {\n      className: \"btn-wrapper text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(GoogleBtn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }))), React.createElement(CardBody, {\n      className: \"px-lg-5 py-lg-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center text-muted mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, \"Or login with credentials\")), React.createElement(Form, {\n      role: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: classnames(\"mb-3\", {\n        focused: this.state.focusedEmail\n      }, {\n        \"has-danger\": this.state.loginEmailState === \"invalid\"\n      }, {\n        \"has-success\": this.state.loginEmailState === \"valid\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      className: classnames(\"input-group-merge input-group-alternative\", {\n        \"is-invalid\": this.state.loginEmailState === \"invalid\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: classnames(\"ni ni-email-83\", {\n        \"text-danger\": this.state.loginEmailState === \"invalid\"\n      }, {\n        \"text-success\": this.state.loginEmailState === \"valid\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }))), React.createElement(Input, {\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"username\",\n      className: classnames({\n        \"text-danger\": this.state.loginEmailState === \"invalid\"\n      }, {\n        \"text-success\": this.state.loginEmailState === \"valid\"\n      }),\n      onFocus: () => this.setState({\n        focusedEmail: true\n      }),\n      s: true,\n      onBlur: () => this.setState({\n        focusedEmail: false\n      }),\n      onChange: e => this.handleOnChangeLogin(e, \"email\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, this.state.loginEmailError)), React.createElement(FormGroup, {\n      className: classnames(\"mb-3\", {\n        focused: this.state.focusedPassword\n      }, {\n        \"has-danger\": this.state.loginPasswordState === \"invalid\"\n      }, {\n        \"has-success\": this.state.loginPasswordState === \"valid\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      className: classnames(\"input-group-merge input-group-alternative\", {\n        \"is-invalid\": this.state.loginPasswordState === \"invalid\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: classnames(\"ni ni-lock-circle-open\", {\n        \"text-danger\": this.state.loginPasswordState === \"invalid\"\n      }, {\n        \"text-success\": this.state.loginPasswordState === \"valid\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }))), React.createElement(Input, {\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      className: classnames({\n        \"text-danger\": this.state.loginPasswordState === \"invalid\"\n      }, {\n        \"text-success\": this.state.loginPasswordState === \"valid\"\n      }),\n      onFocus: () => this.setState({\n        focusedPassword: true\n      }),\n      onBlur: () => this.setState({\n        focusedPassword: false\n      }),\n      onChange: e => this.handleOnChangeLogin(e, \"password\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, this.state.loginPasswordError)), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"my-4\",\n      color: \"default\",\n      type: \"button\",\n      onClick: this.handleLoginSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, \"Login\"))), React.createElement(\"div\", {\n      className: \"mt-3 row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#pablo\",\n      onClick: e => e.preventDefault(),\n      className: \"text-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, \"Forgot Password?\"))), React.createElement(\"div\", {\n      className: \"text-right col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#pablo\",\n      onClick: () => this.toggleModal(\"signUpModal\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, \"Create New Account\")))))))), React.createElement(Modal, {\n      className: \"modal-dialog-centered\",\n      size: \"sm\",\n      isOpen: this.state.signUpModal,\n      toggle: () => {\n        this.toggleModal(\"signUpModal\");\n        this.toggleModal(\"loginSignUpModal\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-body p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"bg-secondary shadow border-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      className: \"bg-transparent pb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-muted text-center mt-2 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, \"Sign Up with\"), React.createElement(\"div\", {\n      className: \"btn-wrapper text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, React.createElement(GoogleBtn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }))), React.createElement(CardBody, {\n      className: \"px-lg-5 py-lg-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center text-muted mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, \"Or sign up with credentials\")), React.createElement(Form, {\n      role: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: classnames(\"mb-3\", {\n        focused: this.state.focusedName\n      }, {\n        \"has-danger\": this.state.nameState === \"invalid\"\n      }, {\n        \"has-success\": this.state.nameState === \"valid\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      className: classnames(\"input-group-merge input-group-alternative\", {\n        \"is-invalid\": this.state.nameState === \"invalid\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: classnames(\"ni ni-circle-08\", {\n        \"text-danger\": this.state.nameState === \"invalid\"\n      }, {\n        \"text-success\": this.state.nameState === \"valid\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }))), React.createElement(Input, {\n      placeholder: \"Name\",\n      type: \"text\",\n      name: \"name\",\n      className: classnames({\n        \"text-danger\": this.state.nameState === \"invalid\"\n      }, {\n        \"text-success\": this.state.nameState === \"valid\"\n      }),\n      onFocus: () => this.setState({\n        focusedName: true\n      }),\n      onBlur: () => this.setState({\n        focusedName: false\n      }),\n      onChange: e => this.handleOnChange(e, \"name\"),\n      value: this.state.name,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, this.state.nameError)), React.createElement(FormGroup, {\n      className: classnames(\"mb-3\", {\n        focused: this.state.focusedEmail\n      }, {\n        \"has-danger\": this.state.emailState === \"invalid\"\n      }, {\n        \"has-success\": this.state.emailState === \"valid\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      className: classnames(\"input-group-merge input-group-alternative\", {\n        \"is-invalid\": this.state.emailState === \"invalid\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: classnames(\"ni ni-email-83\", {\n        \"text-danger\": this.state.emailState === \"invalid\"\n      }, {\n        \"text-success\": this.state.emailState === \"valid\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }))), React.createElement(Input, {\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"username\",\n      className: classnames({\n        \"text-danger\": this.state.emailState === \"invalid\"\n      }, {\n        \"text-success\": this.state.emailState === \"valid\"\n      }),\n      onFocus: () => this.setState({\n        focusedEmail: true\n      }),\n      s: true,\n      onBlur: () => this.setState({\n        focusedEmail: false\n      }),\n      onChange: e => this.handleOnChange(e, \"email\"),\n      value: this.state.username,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    }, this.state.emailError)), React.createElement(FormGroup, {\n      className: classnames(\"mb-3\", {\n        focused: this.state.focusedPassword\n      }, {\n        \"has-danger\": this.state.passwordState === \"invalid\"\n      }, {\n        \"has-success\": this.state.passwordState === \"valid\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      className: classnames(\"input-group-merge input-group-alternative\", {\n        \"is-invalid\": this.state.passwordState === \"invalid\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: classnames(\"ni ni-lock-circle-open\", {\n        \"text-danger\": this.state.passwordState === \"invalid\"\n      }, {\n        \"text-success\": this.state.passwordState === \"valid\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }))), React.createElement(Input, {\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      className: classnames({\n        \"text-danger\": this.state.passwordState === \"invalid\"\n      }, {\n        \"text-success\": this.state.passwordState === \"valid\"\n      }),\n      onFocus: () => this.setState({\n        focusedPassword: true\n      }),\n      onBlur: () => this.setState({\n        focusedPassword: false\n      }),\n      onChange: e => this.handleOnChange(e, \"password\"),\n      required: true,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }, this.state.passwordError)), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"my-4\",\n      color: \"default\",\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618\n      },\n      __self: this\n    }, \"Create Account\"))), React.createElement(\"div\", {\n      className: \"mt-3\",\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632\n      },\n      __self: this\n    }, \"Already a Member? \"), React.createElement(\"a\", {\n      href: \"#pablo\",\n      onClick: () => this.toggleModal(\"signUpModal\"),\n      className: \"text-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638\n      },\n      __self: this\n    }, \" Login Here!\")))))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userState: state.userState\n});\n\nexport default connect(mapStateToProps, {\n  setUser\n})(LoggedOut);","map":{"version":3,"sources":["/Users/Aayush/Desktop/Web Design/WebDesignProject/src/components/LoggedOut.js"],"names":["React","Component","setUser","connect","classnames","Modal","Card","CardHeader","CardBody","FormGroup","Form","Input","InputGroupAddon","InputGroupText","InputGroup","Button","Nav","axios","GoogleBtn","LoggedOut","constructor","props","toggleModal","state","setState","handleOnChangeLogin","e","stateName","newState","regexEmail","validateEmail","target","value","match","password","isCheckbox","type","name","checked","handleOnChange","regexName","validateName","regexPassword","validatePassword","handleLoginSubmit","preventDefault","username","loginPasswordState","loginEmailState","loginEmailError","loginPasswordError","get","then","res","Object","keys","data","length","user","post","sessionStorage","setItem","JSON","stringify","console","log","catch","err","handleSubmit","nameState","passwordState","emailState","emailError","nameError","passwordError","defaultModal","render","loginSignUpModal","focused","focusedEmail","focusedPassword","signUpModal","focusedName","textAlign","mapStateToProps","userState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { setUser } from '../actions/setUser';\nimport { connect } from 'react-redux';\nimport classnames from \"classnames\";\nimport {\n    Modal,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Button,\n    Nav\n} from \"reactstrap\";\nimport axios from 'axios';\nimport GoogleBtn from './GoogleBtn';\n\nclass LoggedOut extends Component {\n\n    constructor(props){\n      super(props);\n\n      this.state = {\n        defaultModal: false,\n        name: '',\n        username: '',\n        password: '',\n        nameState: '',\n        emailState: '',\n        passwordState: '',\n        emailError:'',\n        nameError:'',\n        passwordError:'',\n        loginEmailState:'',\n        loginEmailError:'',\n        loginPasswordState: '',\n        loginPasswordError: ''\n      };\n    }\n\n   \n\n    toggleModal = state => {\n        this.setState({\n          [state]: !this.state[state]\n        });\n      };\n\n      \n    handleOnChangeLogin = (e, stateName) => {\n\n      let newState = this.state;\n\n      if(stateName === \"email\"){\n\n        const regexEmail = /([\\w\\.]+)@([\\w\\.]+)\\.(\\w+)/;\n\n        var validateEmail = e.target.value.match(regexEmail);\n        \n\n        if (!validateEmail) {\n          newState[\"loginEmailState\"] = \"invalid\";\n          newState[\"loginEmailError\"] = \"Please enter valid Email Address\";\n        } else {\n          newState[\"loginEmailState\"] = \"valid\";\n        }\n\n      }\n\n      if(stateName === \"password\"){\n\n        if (newState.password === \"\") {\n          newState[\"loginPasswordState\"] = \"invalid\";\n          newState[\"loginPasswordError\"] = \"Password cannot be blank\";\n        } else {\n          newState[\"loginPasswordState\"] = \"valid\";\n        }\n\n      }\n      \n\n      const isCheckbox = e.target.type === \"checkbox\";\n      this.setState({\n        [e.target.name]: isCheckbox ? e.target.checked : e.target.value\n      });\n\n    }\n\n    handleOnChange = (e, stateName) =>{\n\n      let newState = this.state;\n\n      if(stateName === \"name\"){\n\n        const regexName = /^[A-Za-z][A-Za-z\\'\\-]+([\\A-Za-z][A-Za-z\\'\\-]+)*/;\n\n        var validateName = e.target.value.match(regexName);\n\n        if (!validateName) {\n          newState[stateName + \"State\"] = \"invalid\";\n          newState[stateName + \"Error\"] = \"Name should have more than 2 Letters\";\n        } else {\n          newState[stateName + \"State\"] = \"valid\";\n        }\n\n      }\n\n\n      if(stateName === \"email\"){\n\n        const regexEmail = /([\\w\\.]+)@([\\w\\.]+)\\.(\\w+)/;\n\n        var validateEmail = e.target.value.match(regexEmail);\n\n        \n\n        if (!validateEmail) {\n          newState[stateName + \"State\"] = \"invalid\";\n          newState[stateName + \"Error\"] = \"Please enter valid Email Address\";\n        } \n        \n        else {\n          newState[stateName + \"State\"] = \"valid\";\n        }\n\n       \n\n      }\n\n      if(stateName === \"password\"){\n\n        const regexPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&_])[A-Za-z\\d@$!%*?&]{8,}$/;\n\n        var validatePassword = e.target.value.match(regexPassword);\n\n        if (!validatePassword) {\n          newState[stateName + \"State\"] = \"invalid\";\n          newState[stateName + \"Error\"] = \"Password must contain atleast 1 Uppercase Letter, 1 Lowercase Letter, 1 Special Character and 1 Number \";\n        } else {\n          newState[stateName + \"State\"] = \"valid\";\n        }\n\n      }\n      \n      const isCheckbox = e.target.type === \"checkbox\";\n      this.setState({\n        [e.target.name]: isCheckbox ? e.target.checked : e.target.value\n      });\n    }\n\n\n    handleLoginSubmit = e =>{\n      e.preventDefault();\n\n      let newState = this.state;\n\n      if (newState.username === \"\") {\n        newState[\"loginEmailState\"] = \"invalid\";\n        newState[\"loginEmailError\"] = \"Email cannot be blank\"\n      } else {\n        newState[\"loginEmailState\"] = \"valid\";\n      }\n\n      if (newState.password === \"\") {\n        newState[\"loginPasswordState\"] = \"invalid\";\n        newState[\"loginPasswordError\"] = \"Password cannot be blank\";\n      }\n\n      this.setState({\n        loginPasswordState: newState[\"loginPasswordState\"],\n        loginEmailState: newState[\"loginEmailState\"],\n        loginEmailError: newState[\"loginEmailError\"],\n        loginPasswordError: newState[\"loginPasswordError\"]\n      })\n\n      if(newState[\"loginEmailState\"] == \"invalid\" || newState[\"loginPasswordState\"] == \"invalid\")\n      return;\n\n   \n\n      axios.get('http://localhost:5000/users/findByEmail/'+newState.username)\n        .then(res=>{\n          if(Object.keys(res.data).length === 0){\n\n            newState[\"loginEmailState\"] = \"invalid\";\n            newState[\"loginEmailError\"] = \"User doesnot exists!\" \n\n            this.setState({            \n              loginEmailState:  newState[\"loginEmailState\"],\n              loginEmailError: newState[\"loginEmailError\"]             \n            })\n           \n          } else {\n\n            const user = {\n              username: this.state.username,\n              password: this.state.password\n            };\n      \n            axios.post('http://localhost:5000/users/login',\n            {\n              username: this.state.username,\n              password: this.state.password\n            },{\n              \"headers\": {\n                'Content-Type': 'application/json',\n              }\n            })\n              .then(res => {\n                sessionStorage.setItem('user',JSON.stringify(res.data));\n                this.props.setUser(res.data); \n                console.log(this.props)\n              })\n              .catch(err=>{\n\n                newState[\"loginPasswordState\"] = \"invalid\";\n                newState[\"loginPasswordError\"] = \"Password is Incorrect\" \n\n            this.setState({            \n              loginPasswordState: newState[\"loginPasswordState\"],\n              loginPasswordError: newState[\"loginPasswordError\"]             \n            })\n\n\n              });\n      \n              console.log(user);\n\n          }  \n             \n        })\n        .catch(err=>console.log(err));\n\n    }\n\n\n    handleSubmit = e =>{\n      e.preventDefault();\n\n      \n\n      const regexName = /^[A-Za-z][A-Za-z\\'\\-]+([\\A-Za-z][A-Za-z\\'\\-]+)*/;\n      var validateName = this.state.name.match(regexName);\n\n      const regexEmail = /([\\w\\.]+)@([\\w\\.]+)\\.(\\w+)/;\n      var validateEmail = this.state.username.match(regexEmail);\n\n      const regexPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&_])[A-Za-z\\d@$!%*?&]{8,}$/;\n      var validatePassword = this.state.password.match(regexPassword);\n\n      let newState = this.state;\n\n      if (newState.username === \"\") {\n        newState[\"emailState\"] = \"invalid\";\n        newState[\"emailError\"] = \"Email cannot be blank\"\n      } else if (!validateEmail) {\n          newState[\"emailState\"] = \"invalid\";\n          newState[\"emailError\"] = \"Please enter valid Email Address\"\n        } else {\n        newState[\"emailState\"] = \"valid\";\n      }\n\n      if (newState.password === \"\") {\n        newState[\"passwordState\"] = \"invalid\";\n        newState[\"passwordError\"] = \"Password cannot be blank\";\n      } else if (!validatePassword) {\n        newState[\"passwordState\"] = \"invalid\";\n        newState[\"passwordError\"] = \"Password must contain atleast 1 Uppercase Letter, 1 Lowercase Letter, 1 Special Character and 1 Number \";\n      } else {\n        newState[\"passwordState\"] = \"valid\";\n      }\n\n      if (newState.name === \"\") {\n        newState[\"nameState\"] = \"invalid\";\n        newState[\"nameError\"] = \"Name cannot be blank\";\n      } else if (!validateName) {\n        newState[\"nameState\"] = \"invalid\";\n        newState[\"nameError\"] = \"Name should have more than 2 Letters\";\n      } else {\n        newState[\"nameState\"] = \"valid\";\n      }\n\n      this.setState({\n        nameState: newState[\"nameState\"],\n        passwordState:  newState[\"passwordState\"],\n        emailState:  newState[\"emailState\"],\n        emailError: newState[\"emailError\"],\n        nameError: newState[\"nameError\"],\n        passwordError: newState[\"passwordError\"]\n      })\n\n      if(newState[\"nameState\"] == \"invalid\" || newState[\"emailState\"] == \"invalid\" || newState[\"passwordState\"] == \"invalid\")\n      return;\n\n\n      axios.get('http://localhost:5000/users/findByEmail/'+this.state.username)\n        .then(res=>{\n          if(Object.keys(res.data).length !== 0){\n\n            \n            console.log(\"User Exists\")\n            newState[\"emailState\"] = \"invalid\";\n            newState[\"emailError\"] = \"User already exists!\" \n      \n            this.setState({            \n              emailState:  newState[\"emailState\"],\n              emailError: newState[\"emailError\"]             \n            })\n      \n\n          } else {\n            \n            const user = {\n              name: this.state.name,\n              username: this.state.username,\n              password: this.state.password\n            };\n          \n            axios.post('http://localhost:5000/users/add',\n            {\n              name: this.state.name,\n              username: this.state.username,\n              password: this.state.password\n            },{\n              \"headers\": {\n                'Content-Type': 'application/json',\n              }\n            })\n              .then(res=>{\n                console.log(res.data);\n                \n              })\n              .catch(err=>console.log(err));\n      \n            console.log(user);\n            \n      \n            this.setState({\n              defaultModal: false,\n              nameState: '',\n              emailState: '',\n              passwordState: '',\n              username: '',\n              name: '',\n              password: '',\n              emailError: '',\n              passwordError: '',\n              nameError: ''\n      \n            })\n      \n            this.toggleModal(\"signUpModal\");\n            this.toggleModal(\"loginSignUpModal\");\n      \n          }\n             \n        })\n        .catch(err=>console.log(err));\n    }\n\n\n    render() {\n      \n        return (\n            <div className=\"ml-lg-auto\">\n            <Nav navbar>\n                <Button color=\"white\" outline \n                        type=\"button\"\n                        size=\"sm\" \n                        onClick={() => this.toggleModal(\"loginSignUpModal\")}>\n                        Login / Sign Up\n                </Button>\n             </Nav>\n            <Modal\n              className=\"modal-dialog-centered\"\n              size=\"sm\"\n              isOpen={this.state.loginSignUpModal}\n              toggle={() => this.toggleModal(\"loginSignUpModal\")}\n            >\n              <div className=\"modal-body p-0\">\n                <Card className=\"bg-secondary shadow border-0\">\n                  <CardHeader className=\"bg-transparent pb-5\">\n                    <div className=\"text-muted text-center mt-2 mb-3\">\n                      Login with\n                    </div>\n                    <div className=\"btn-wrapper text-center\">\n                      <GoogleBtn/>\n                    </div>\n                  </CardHeader>\n                  <CardBody className=\"px-lg-5 py-lg-5\">\n                    <div className=\"text-center text-muted mb-4\">\n                      <small>Or login with credentials</small>\n                    </div>\n                    <Form role=\"form\">\n                      <FormGroup className={classnames(\n                          \"mb-3\",\n                          { focused: this.state.focusedEmail },\n                          { \"has-danger\": this.state.loginEmailState === \"invalid\" },\n                          { \"has-success\": this.state.loginEmailState === \"valid\" }\n                        )}>\n                        <InputGroup className={classnames(\"input-group-merge input-group-alternative\", {\n                            \"is-invalid\": this.state.loginEmailState === \"invalid\"\n                          })}>\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText >\n                            <i className={classnames(\n                                  \"ni ni-email-83\",\n                                  { \"text-danger\": this.state.loginEmailState === \"invalid\" },\n                                  { \"text-success\": this.state.loginEmailState === \"valid\" }\n                                )}/>\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input placeholder=\"Email\" type=\"email\" name=\"username\"\n                          className={classnames(\n                            { \"text-danger\": this.state.loginEmailState === \"invalid\" },\n                            { \"text-success\": this.state.loginEmailState === \"valid\" }\n                          )}\n                          onFocus={() => this.setState({ focusedEmail: true })}s\n                          onBlur={() => this.setState({ focusedEmail: false })}\n                          onChange={e => this.handleOnChangeLogin(e, \"email\")} />\n                        </InputGroup>\n                        <div className=\"invalid-feedback\">{this.state.loginEmailError}</div>\n                      </FormGroup>\n                      <FormGroup className={classnames(\n                          \"mb-3\",\n                          { focused: this.state.focusedPassword },\n                          { \"has-danger\": this.state.loginPasswordState === \"invalid\" },\n                          { \"has-success\": this.state.loginPasswordState === \"valid\" }\n                        )}>\n                        <InputGroup className={classnames(\"input-group-merge input-group-alternative\", {\n                            \"is-invalid\": this.state.loginPasswordState === \"invalid\"\n                          })}>\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className={classnames(\n                                  \"ni ni-lock-circle-open\",\n                                  { \"text-danger\": this.state.loginPasswordState === \"invalid\" },\n                                  { \"text-success\": this.state.loginPasswordState === \"valid\" }\n                                )} />\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input placeholder=\"Password\" type=\"password\" name=\"password\"\n                            className={classnames(\n                            { \"text-danger\": this.state.loginPasswordState === \"invalid\" },\n                            { \"text-success\": this.state.loginPasswordState === \"valid\" }\n                          )}\n                          onFocus={() => this.setState({ focusedPassword: true })}\n                          onBlur={() => this.setState({ focusedPassword: false })}\n                          onChange={e => this.handleOnChangeLogin(e, \"password\")}\n                          />\n                        </InputGroup>\n                         <div className=\"invalid-feedback\">{this.state.loginPasswordError}</div>\n                      </FormGroup>\n                      \n                      <div className=\"text-center\">\n                        <Button\n                          className=\"my-4\"\n                          color=\"default\"\n                          type=\"button\"\n                          onClick={this.handleLoginSubmit}\n                        >\n                          Login\n                        </Button>\n                      </div>\n                    </Form>\n                    <div className=\"mt-3 row\">\n                      <div className=\"col-6\">\n\n                        <a\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        className =\"text-default\"\n                        >\n                        <small>Forgot Password?</small> \n                        </a>\n\n                      </div>\n\n                      <div className=\"text-right col-6\">\n\n                        <a\n                        href=\"#pablo\"\n                        onClick={() => this.toggleModal(\"signUpModal\")}\n                       \n                        >\n                        <small>Create New Account</small>\n                        </a>\n\n                      </div>\n\n                    </div>\n                   \n                  </CardBody>\n                </Card>\n              </div>\n            </Modal>\n\n            <Modal\n              className=\"modal-dialog-centered\"\n              size=\"sm\"\n              isOpen={this.state.signUpModal}\n              toggle={() => {this.toggleModal(\"signUpModal\");\n              this.toggleModal(\"loginSignUpModal\");\n              }}\n            >\n              <div className=\"modal-body p-0\">\n                <Card className=\"bg-secondary shadow border-0\">\n                  <CardHeader className=\"bg-transparent pb-5\">\n                    <div className=\"text-muted text-center mt-2 mb-3\">\n                      Sign Up with\n                    </div>\n                    <div className=\"btn-wrapper text-center\">     \n                    <GoogleBtn/>\n                    </div>\n                  </CardHeader>\n                  <CardBody className=\"px-lg-5 py-lg-5\">\n                    <div className=\"text-center text-muted mb-4\">\n                      <small>Or sign up with credentials</small>\n                    </div>\n                    <Form role=\"form\">\n                      <FormGroup className={classnames(\n                          \"mb-3\",\n                          { focused: this.state.focusedName },\n                          { \"has-danger\": this.state.nameState === \"invalid\" },\n                          { \"has-success\": this.state.nameState === \"valid\" }\n                        )}>\n                        <InputGroup className={classnames(\"input-group-merge input-group-alternative\", {\n                            \"is-invalid\": this.state.nameState === \"invalid\"\n                          })}>\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className={classnames(\n                                  \"ni ni-circle-08\",\n                                  { \"text-danger\": this.state.nameState === \"invalid\" },\n                                  { \"text-success\": this.state.nameState === \"valid\" }\n                                )}  />\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input placeholder=\"Name\" type=\"text\" name=\"name\"\n                          className={classnames(\n                            { \"text-danger\": this.state.nameState === \"invalid\" },\n                            { \"text-success\": this.state.nameState === \"valid\" }\n                          )}\n                          onFocus={() => this.setState({ focusedName: true })}\n                          onBlur={() => this.setState({ focusedName: false })}\n                          onChange={e => this.handleOnChange(e, \"name\")} \n                          value={this.state.name} required\n                          />\n                        </InputGroup>\n                        <div className=\"invalid-feedback\">{this.state.nameError}</div>\n                      </FormGroup>\n                      <FormGroup className={classnames(\n                          \"mb-3\",\n                          { focused: this.state.focusedEmail },\n                          { \"has-danger\": this.state.emailState === \"invalid\" },\n                          { \"has-success\": this.state.emailState === \"valid\" }\n                        )}>\n                        <InputGroup className={classnames(\"input-group-merge input-group-alternative\", {\n                            \"is-invalid\": this.state.emailState === \"invalid\"\n                          })}>\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className={classnames(\n                                  \"ni ni-email-83\",\n                                  { \"text-danger\": this.state.emailState === \"invalid\" },\n                                  { \"text-success\": this.state.emailState === \"valid\" }\n                                )} />\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input placeholder=\"Email\" type=\"email\" name=\"username\"\n                                  className={classnames(\n                                    { \"text-danger\": this.state.emailState === \"invalid\" },\n                                    { \"text-success\": this.state.emailState === \"valid\" }\n                                  )}\n                                  onFocus={() => this.setState({ focusedEmail: true })}s\n                                  onBlur={() => this.setState({ focusedEmail: false })}\n                                  onChange={e => this.handleOnChange(e, \"email\")} \n                                  value={this.state.username} required/>\n                        </InputGroup>\n                        <div className=\"invalid-feedback\">{this.state.emailError}</div>\n                      </FormGroup>\n                      <FormGroup className={classnames(\n                          \"mb-3\",\n                          { focused: this.state.focusedPassword },\n                          { \"has-danger\": this.state.passwordState === \"invalid\" },\n                          { \"has-success\": this.state.passwordState === \"valid\" }\n                        )}>\n                        <InputGroup className={classnames(\"input-group-merge input-group-alternative\", {\n                            \"is-invalid\": this.state.passwordState === \"invalid\"\n                          })}>\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className={classnames(\n                                  \"ni ni-lock-circle-open\",\n                                  { \"text-danger\": this.state.passwordState === \"invalid\" },\n                                  { \"text-success\": this.state.passwordState === \"valid\" }\n                                )} />\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input placeholder=\"Password\" type=\"password\" name=\"password\" \n                                   className={classnames(\n                                    { \"text-danger\": this.state.passwordState === \"invalid\" },\n                                    { \"text-success\": this.state.passwordState === \"valid\" }\n                                  )}\n                                  onFocus={() => this.setState({ focusedPassword: true })}\n                                  onBlur={() => this.setState({ focusedPassword: false })}\n                                  onChange={e => this.handleOnChange(e, \"password\")} \n                                  required value={this.state.password}/>\n                        </InputGroup>\n                        <div className=\"invalid-feedback\">{this.state.passwordError}</div>\n                      </FormGroup>\n\n                      <div className=\"text-center\">\n                        <Button\n                          className=\"my-4\"\n                          color=\"default\"\n                          type=\"button\"\n                          onClick={this.handleSubmit}\n                        >\n                          Create Account\n                        </Button>\n                      </div>\n                    </Form>\n\n                    <div className=\"mt-3\" style={{textAlign:\"center\"}}>\n                      <div>\n\n                        <small>Already a Member? </small> \n                        <a\n                        href=\"#pablo\"\n                        onClick={() => this.toggleModal(\"signUpModal\")}\n                        className =\"text-default\"\n                        >\n                        <small> Login Here!</small> \n                        </a>\n\n                      </div>\n\n                    </div>\n                   \n                  </CardBody>\n                </Card>\n              </div>\n            </Modal>\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    userState: state.userState\n});\n\nexport default connect(mapStateToProps,{ setUser })(LoggedOut);\n"]},"metadata":{},"sourceType":"module"}